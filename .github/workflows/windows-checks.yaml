name: windows-checks # checks executed on Windows, on both pull requests and master branch
on:
  push:
    branches:
      - master
      - staging
      - trying
  pull_request:
  schedule:
    - cron: '0 2,4,6 * * *'
env:
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0
  INSOLAR_LOG_LEVEL: warn
jobs:
  tests-on-windows:
    name: windows-checks # don't change, this name is used in repository restricts!
    runs-on: windows-latest
    env: # we have to specify fake BUILD_DATE and BUILD_TIME here because git-date-time.sh doesn't work on Windows
      GOPATH: D:/a/assured-ledger/assured-ledger/go
      WORKDIR: D:/a/assured-ledger/assured-ledger/go/src/github.com/insolar/assured-ledger/ledger-core
      BUILD_DATE: 20200101
      BUILD_TIME: 123456
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: go/src/github.com/insolar/assured-ledger
          # Check out pull request's HEAD commit instead of the merge commit to
          # work-around an issue where wrong a commit is being checked out.
          # For more details, see:
          # https://github.com/actions/checkout/issues/299.
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Add bin to path
        run: echo "${{env.GOPATH}}\\bin" >> $GITHUB_PATH
      - name: Go mod cache setup
        uses: actions/cache@v2
        with:
          path: ${{env.GOPATH}}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Fetch dependencies
        run: |
          go mod download
          make vendor
        working-directory: ${{env.WORKDIR}}
      - name: Check succesful build
        run: make pre-build build
        working-directory: ${{env.WORKDIR}}
      - name: Set dynamic port ranges
        run: |
          netsh int ipv4 set dynamicport tcp start=51000 num=14000
          netsh int ipv4 set dynamicport udp start=51000 num=14000
          netsh int ipv4 show dynamicport tcp
          netsh int ipv4 show dynamicport udp
      - name: Run unit and slow tests and check code coverage
        if: always()
        run: make test_with_coverage
        working-directory: ${{env.WORKDIR}}
      - name: Upload integration_extended_test.log to artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: integration_extended_test_windows
          path: ${{env.WORKDIR}}/integration_extended_test.log
      - name: Run functional tests multiple times with race detector as local cloud
        if: always()
        run: make test_func_cloud_race > functional_test_cloud.log
        working-directory: ${{env.GOPATH}}/src/github.com/insolar/assured-ledger/ledger-core
      - name: Upload functional_test_cloud.log to artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: functional_test_cloud_windows
          path: ${{env.GOPATH}}/src/github.com/insolar/assured-ledger/ledger-core/functional_test_cloud.log
      - name: Add coverage.html to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-coverage-html
          path: ${{env.WORKDIR}}/coverage.html
      - name: Add coverage.out to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-coverage-out
          path: ${{env.WORKDIR}}/coverage.out
      - name: Send failure notification to Slack
        if: ${{ github.event_name == 'push' && failure() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTIONS_NOTIFICATIONS_SLACK_HOOK_URL }}
