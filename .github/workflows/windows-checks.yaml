name: windows-checks
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 2,4,6 * * *'
env:
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0
  INSOLAR_LOG_LEVEL: warn
  GOTEST: 'gotestsum --'
jobs:
  tests-on-windows:
    name: windows-checks # don't change, this name is used in repository restricts!
    runs-on: windows-latest
    env: # we have to specify fake BUILD_DATE and BUILD_TIME here because git-date-time.sh doesn't work on Windows
      GOPATH: D:/a/assured-ledger/assured-ledger/go
      WORKDIR: D:/a/assured-ledger/assured-ledger/go/src/github.com/insolar/assured-ledger/ledger-core/v2
      BUILD_DATE: 20200101
      BUILD_TIME: 123456
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/assured-ledger
      - name: Set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Add bin to path
        run: echo "::add-path::${{env.GOPATH}}\\bin"
      - name: Fetch vendor and check succesful build
        run: |
          go mod download
          make vendor pre-build build
        working-directory: ${{env.WORKDIR}}
      - name: Run unit and slow tests and check code coverage
        if: always()
        run: make test_with_coverage
        working-directory: ${{env.WORKDIR}}
      - name: Add coverage.html to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-coverage-html
          path: ${{env.WORKDIR}}/coverage.html
      - name: Add coverage.out to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-coverage-out
          path: ${{env.WORKDIR}}/coverage.out
