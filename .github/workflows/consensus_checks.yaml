name: consensus-checks
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 2,4,6 * * *'
env:
  KUBECONFIG: k3s.yaml
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0
  INSOLAR_LOG_LEVEL: warn
  GOTEST: 'gotestsum --'
jobs:
  consensus:
    name: consensus # don't change, this name is used in repository restricts!
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/
      V2_PATH: /home/runner/work/assured-ledger/assured-ledger/ledger-core/v2
      USE_MANIFESTS: ci
      GOPROXY: https://proxy.golang.org,https://goproxy.io,direct
      KUBEVAL_VERSION: 0.15.0
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v1
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Add bin to path
        run: echo "::add-path::${{env.GOPATH}}/bin"
      - name: get kubeval
        run: |
          mkdir bin
          curl -L -s --create-dirs https://github.com/instrumenta/kubeval/releases/download/$KUBEVAL_VERSION/kubeval-linux-amd64.tar.gz | tar xvz --exclude='LICENSE' --exclude='README.md' -C $GITHUB_WORKSPACE/bin
          chmod +x $GITHUB_WORKSPACE/bin/kubeval
      - name: add workspace/bin to path
        run: echo "::add-path::$GITHUB_WORKSPACE/bin"
      - name: check resources
        run: |
          sudo lscpu
          free -h
      - name: k3s
        uses: insolar/k3s-gha@master
        with:
          custom_registry: true
          registries_yaml_path: "ledger-core/v2/scripts/deploy/kube/ci/registries.yaml"
          kubectl_version: "v1.18.2"
      - name: deploy k3s-registry
        run: kubectl apply -k ledger-core/v2/scripts/deploy/kube/k3s-registry
      - name: wait for registry to be up and running
        run: kubectl -n registry rollout status deploy/registry --timeout=80s
      - name: deploy ingress
        run: KUBECONFIG=$GITHUB_WORKSPACE/k3s.yaml; make kube_apply_ingress
        working-directory: ${{env.V2_PATH}}
      - name: deploy prometheus
        run: KUBECONFIG=$GITHUB_WORKSPACE/k3s.yaml; make kube_apply_prometheus
        working-directory: ${{env.V2_PATH}}
      - name: build images
        run: make docker-build
        working-directory: ${{env.V2_PATH}}
      - name: push assured ledger image to local registry
        run: |
          docker tag insolar/assured-ledger:latest localhost/assured-ledger:latest
          docker push localhost/assured-ledger:latest
      - name: run insolar net
        run: |
          export KUBECONFIG=$GITHUB_WORKSPACE/k3s.yaml
          go mod download
          make vendor install-build-tools kube_start_net
        working-directory: ${{env.V2_PATH}}
      - name: run tests
        run: make test_func_kubernetes_ci 
        working-directory: ${{env.V2_PATH}}
      - name: check prometheus contents
        run: curl -s 'http://localhost/prometheus/api/v1/status/tsdb' | jq .
      - name: sample prom data
        run: curl 'http://localhost/prometheus/api/v1/query?query=insolar_consensus_packets_recv' | jq .
      - name: collect artifacts
        if: always()
        run: |
          export KUBECONFIG=$GITHUB_WORKSPACE/k3s.yaml
          make kube_collect_artifacts
        working-directory: ${{env.V2_PATH}}
      - name: Aggregate logs into a single archive
        if: always()
        run: tar --warning=no-file-changed -cvzf ${{env.V2_PATH}}/kube-nodes-output.tgz /tmp/insolar/logs/* || true
      - name: Upload logs to artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: kube-nodes-output
          path: ${{env.V2_PATH}}/kube-nodes-output.tgz
