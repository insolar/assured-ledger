name: consensus-checks # consensus perfomance checks
on:
  pull_request:
env:
  KUBECONFIG: "${{ github.workspace }}/aks.yaml"
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0
  INSOLAR_LOG_LEVEL: warn
  GOTEST: 'gotestsum --'
  GOPATH: /home/runner/work/
  GOPROXY: https://proxy.golang.org,https://goproxy.io,direct
  CORE_PATH: /home/runner/work/assured-ledger/assured-ledger/ledger-core
  USE_MANIFESTS: aks
  ACR_HOST: usciregistry.azurecr.io
jobs:
  consensus:
    name: consensus # don't change, this name is used in repository restricts!
    runs-on: ubuntu-latest
    steps:
      - name: Create short git sha and git ref vars
        id: set-vars
        uses: actions/github-script@v2
        with:
          script: |
            const shortSha = context.sha.substring(0, 8);
            let shortRef;
            if (context.ref.search(/^refs\/pull/) > -1) {
              shortRef = "pull-" + context.ref.match(/\d+/);
            } else {
              shortRef = context.ref.replace(/^refs\/(heads|tags)\//, "").replace(/\//g, "-");
            }
            const result = {
              shortSha: shortSha,
              shortRef: shortRef,
            }
            console.log(result);
            return result;
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Add bin to path
        run: echo "::add-path::${{ env.GOPATH }}/bin"
      - name: Add workspace/bin to path
        run: echo "::add-path::$GITHUB_WORKSPACE/bin"
      - name: save kubeconfig
        run: echo "${{secrets.CLOUD_KUBECONFIG}}" >> aks.yaml
      - name: Build docker images
        run: make docker-build
        working-directory: ${{ env.CORE_PATH }}
      - name: Push assured ledger image to Azure container registry registry
        run: |
          docker login $ACR_HOST --username ${{secrets.ACR_SP_ID}} --password ${{secrets.ACR_SP_SECRET}}
          docker tag insolar/assured-ledger:latest $ACR_HOST/assured-ledger:latest
          docker push $ACR_HOST/assured-ledger:latest
      - name: get docker config location
        run:  find /home/runner -name config.json -type f
      - name: Prepare environment
        run: |
          go mod download
          make vendor install-build-tools
        working-directory: ${{ env.CORE_PATH }}
      - name: Build kube-deploy-tool
        run: go build -o ./bin/kube-deploy-tool ./scripts/deploy/kube-deploy-tool
        working-directory: ${{ env.CORE_PATH }}
      - name: template GIT_SHA to deployment manifests
        run:  sed -i "s/placeholder/$GIT_SHA/g" ledger-core/scripts/deploy/kube/aks/*
      - name: Run headless network and generate performance report
        env:
          KUBEDEPLOYTOOL_METRICPARAMS_WEBDAV_HOST: https://reports.garage.insolar.io
          KUBEDEPLOYTOOL_METRICPARAMS_WEBDAV_USERNAME: ${{ secrets.WEBDAV_USERNAME }}
          KUBEDEPLOYTOOL_METRICPARAMS_WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
          KUBEDEPLOYTOOL_METRICPARAMS_WEBDAV_DIRECTORY: consensus-checks
          KUBEDEPLOYTOOL_METRICPARAMS_GIT_COMMIT: ${{ fromJson(steps.set-vars.outputs.result).shortSha }}
          KUBEDEPLOYTOOL_METRICPARAMS_GIT_HEAD: ${{ fromJson(steps.set-vars.outputs.result).shortRef }}
        run: bin/kube-deploy-tool --config=scripts/deploy/kube-deploy-tool/config.yaml
        working-directory: ${{ env.CORE_PATH }}
      - name: Aggregate logs into a single archive
        if: always()
        run: tar --warning=no-file-changed -cvzf ${{ env.CORE_PATH }}/kube-nodes-output.tgz /tmp/insolar/logs/* || true
      - name: Upload logs to artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: kube-nodes-output
          path: ${{ env.CORE_PATH }}/kube-nodes-output.tgz
