name: consensus-checks # consensus perfomance checks
on:
#  schedule:
#    - cron: '0 0 * * 6' # run at midnight on saturdays
  workflow_dispatch: {}
env:
  KUBECONFIG: "${{ github.workspace }}/aks.yaml"
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0
  INSOLAR_LOG_LEVEL: warn
  GOPATH: /home/runner/work/
  GOPROXY: https://proxy.golang.org,https://gocenter.io,direct
  CORE_PATH: /home/runner/work/assured-ledger/assured-ledger/ledger-core
  ACR_HOST: usciregistry.azurecr.io
  PROMETHEUS_USER: ${{secrets.PROMETHEUS_USER}}
  PROMETHEUS_PASS: ${{secrets.PROMETHEUS_PASS}}
  REPORT_WEBDAV_HOST: "https://reports.garage.insolar.io"
  REPORT_WEBDAV_USERNAME: "${{secrets.WEBDAV_USERNAME}}"
  REPORT_WEBDAV_PASSWORD: "${{secrets.WEBDAV_PASSWORD}}"
  REPORT_WEBDAV_TIMEOUT: "1m"
jobs:
  prepare:
    name: prepare # don't change, this name is used in repository restricts!
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Add bin to path
        run: echo "${{ env.GOPATH }}/bin:$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: Build docker images
        run: make docker-build
        working-directory: ${{ env.CORE_PATH }}
      - name: Push assured ledger image to Azure container registry registry
        run: |
          docker login $ACR_HOST --username ${{secrets.ACR_SP_ID}} --password ${{secrets.ACR_SP_SECRET}}
          docker tag insolar/assured-ledger:latest $ACR_HOST/assured-ledger:"${GITHUB_SHA:0:8}"
          docker push $ACR_HOST/assured-ledger:"${GITHUB_SHA:0:8}"
      - name: Prepare report config boilerplate
        run: |
          echo "INSOLAR_BRANCH=$(echo "${GITHUB_REF#refs/heads/}")" >> $GITHUB_ENV
          echo "INSOLAR_TAG=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
          cat ledger-core/scripts/deploy/kube/report.yaml | envsubst '${INSOLAR_BRANCH} ${INSOLAR_TAG}' >report-config.yaml
      - name: Create base report-config artifact
        uses: actions/upload-artifact@v2
        with:
          name: report-config
          path: report-config.yaml
  consensus:
    name: consensus # don't change, this name is used in repository restricts!
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        target: [aks-10node, aks-15node, aks-20node, aks-40node, aks-60node]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Preparation - set prerequisite variables, full sha is ${{github.sha}}
        env:
          TARGET: ${{matrix.target}}
        run: |
          echo "INSOLAR_DESIRED_UPTIME=300" >> $GITHUB_ENV
          echo "INSOLAR_TAG=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
          echo "INSOLAR_NETWORK_SIZE=${TARGET}" >> $GITHUB_ENV
          echo "INSOLAR_NAMESPACE=${GITHUB_SHA:0:8}-${TARGET}" >> $GITHUB_ENV
          echo "INSOLAR_BRANCH=$(echo "${GITHUB_REF#refs/heads/}")" >> $GITHUB_ENV
          echo "INSOLAR_NETWORK_SIZE_INT=$(echo $TARGET | awk '{gsub(/[^[0-9]]*/,"");print}')" >> $GITHUB_ENV
      - name: Install utility binaries
        run: |
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          mkdir bin
          wget -q https://github.com/mikefarah/yq/releases/download/3.4.0/yq_linux_amd64 -O bin/yq
          chmod +x bin/yq
      - name: Preparation - copy docker auth secret
        run: |
          docker login $ACR_HOST --username ${{secrets.ACR_SP_ID}} --password ${{secrets.ACR_SP_SECRET}}
          cp /home/runner/.docker/config.json ledger-core/scripts/deploy/kube/gitops/"$INSOLAR_NETWORK_SIZE"/dockerconfigjson
      - name: Preparation - save kubeconfig
        run: echo "${{secrets.CLOUD_KUBECONFIG}}" >> aks.yaml
      - name: Praparation - github token for gitops access
        run: git config --global url."https://${{secrets.INS_SERVICE_PAT}}@github.com/".insteadOf "https://github.com/"
      - name: Ingress access check (IF THIS STEP FAILED - CALL DEVOPS, RED ALERT)
        run:  curl -s "https://$PROMETHEUS_USER:$PROMETHEUS_PASS@prometheus.uscifarm.insolar.io/prometheus/api/v1/labels" | jq -r '.status'
      - name: Deploy network
        run: kubectl kustomize ledger-core/scripts/deploy/kube/gitops/"$INSOLAR_NETWORK_SIZE" | envsubst '${INSOLAR_NAMESPACE} ${INSOLAR_TAG}' | kubectl -n $INSOLAR_NAMESPACE apply -f -
      - name: Rollout check (IF THIS STEP FAILED - CALL DEV, CHECK LOGS, YELLOW ALERT)
        run: kubectl -n $INSOLAR_NAMESPACE rollout status sts/virtual --timeout=30m
      - name: Provide link to grafana
        run:  echo "https://monitoring.uscifarm.insolar.io/d/LmD-fXFZz/ins-network?orgId=1&refresh=10s&var-phase=All&var-packetType=All&var-namespace=$INSOLAR_NAMESPACE&from=now-10m&to=now"
      - name: Set network start time variable
        run:  echo "INSOLAR_START_TIME=$(date +'%s')" >> $GITHUB_ENV
      - name: Keep network running for a desired period of time
        run:  sleep $INSOLAR_DESIRED_UPTIME
      - name: mandatory debug
        if: always()
        run: kubectl get all --all-namespaces
      - name: cleanup
        if: always()
        run: kubectl delete ns $INSOLAR_NAMESPACE --ignore-not-found=true

      - name: Download report-config
        uses: actions/download-artifact@v2
        with:
          name: report-config
      - name: Save network run properties
        run: |
          cat ledger-core/scripts/deploy/kube/report-add-range.yaml | envsubst '${INSOLAR_START_TIME} ${INTERVAL} ${INSOLAR_NETWORK_SIZE_INT}' > yq-cmd.yaml
          yq write --inplace --script yq-cmd.yaml report-config.yaml
        env:
          INTERVAL: 5m
      - name: Upload updated report-config
        uses: actions/upload-artifact@v2
        with:
          name: report-config
          path: report-config.yaml

  report:
    name: report
    needs: consensus
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Preparation - set prerequisite variables, full sha is ${{github.sha}}
        run: |
          echo "REPORT_WEBDAV_DIRECTORY=consensus-checks/$(date +"%Y%m%d-%H%M")-$(echo ${{github.ref}} | cut -d '/' -f3)-${GITHUB_SHA:0:8}" >> $GITHUB_ENV
          echo "INSOLAR_BRANCH=$(echo "${GITHUB_REF#refs/heads/}")" >> $GITHUB_ENV
          echo "INSOLAR_TAG=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
      - name: Install utility binaries
        run: |
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          wget -q https://github.com/insolar/consensus-reports/releases/download/v1.0.5/{report,metricreplicator} -P bin/
          chmod +x bin/{report,metricreplicator}
      - name: Download report-config
        uses: actions/download-artifact@v2
        with:
          name: report-config
      - name: gather metrics and generate report (IF THIS STEP FAILED - CALL DEV, READ LOGS BLUE ALERT)
        run: |
          metricreplicator --config report-config.yaml
        env:
          REPORT_PROMETHEUS_HOST: "https://${{secrets.PROMETHEUS_USER}}:${{secrets.PROMETHEUS_PASS}}@prometheus.uscifarm.insolar.io/prometheus"
      - name: generate report
        run: report
        env:
          REPORT_GIT_BRANCH: ${{env.INSOLAR_BRANCH}}
          REPORT_GIT_HASH: ${{env.INSOLAR_TAG}}
      - name: report URL
        run: |
          curl --silent --header "Content-Type: application/json" --request POST \
               --data "{ \"text\": \"Headless network test report: ${REPORT_WEBDAV_HOST}/${REPORT_WEBDAV_DIRECTORY}\" }" \
               ${{ secrets.ACTIONS_NOTIFICATIONS_SLACK_HOOK_URL }}
          echo -e "\n\n\n"
          echo $REPORT_WEBDAV_HOST/$REPORT_WEBDAV_DIRECTORY
