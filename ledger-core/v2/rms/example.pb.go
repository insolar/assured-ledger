// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: example.proto

package rms

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	github_com_insolar_assured_ledger_ledger_core_v2_insproto "github.com/insolar/assured-ledger/ledger-core/v2/insproto"
	insproto "github.com/insolar/assured-ledger/ledger-core/v2/insproto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RecordExample struct {
	Polymorph     uint32            `protobuf:"varint,16,opt,name=Polymorph,proto3" json:"Polymorph"`
	BodyHash      RecordBody        `protobuf:"bytes,1790,opt,name=BodyHash,proto3" json:"BodyHash"`
	ExtensionHash []RecordExtension `protobuf:"bytes,1791,rep,name=ExtensionHash,proto3" json:"ExtensionHash"`
	// Add here custom fields
	Str      ByteString        `protobuf:"bytes,21,opt,name=Str,proto3,customtype=ByteString" json:"Str"`
	FieldMap insproto.FieldMap `protobuf:"bytes,19999,opt,name=FieldMap,proto3" json:"FieldMap"`
}

func (m *RecordExample) Reset()         { *m = RecordExample{} }
func (m *RecordExample) String() string { return proto.CompactTextString(m) }
func (*RecordExample) ProtoMessage()    {}
func (*RecordExample) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}
func (m *RecordExample) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RecordExample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *RecordExample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordExample.Merge(m, src)
}
func (m *RecordExample) XXX_Size() int {
	return m.ProtoSize()
}
func (m *RecordExample) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordExample.DiscardUnknown(m)
}

var xxx_messageInfo_RecordExample proto.InternalMessageInfo

type MessageExample struct {
	RecordExample `protobuf:"bytes,17,opt,name=Record,proto3,embedded=Record" json:"Record"`
	// Add here custom fields
	MsgParam uint64 `protobuf:"varint,1800,opt,name=MsgParam,proto3" json:"MsgParam"`
	MsgBytes []byte `protobuf:"bytes,1801,opt,name=MsgBytes,proto3" json:"MsgBytes"`
}

func (m *MessageExample) Reset()         { *m = MessageExample{} }
func (m *MessageExample) String() string { return proto.CompactTextString(m) }
func (*MessageExample) ProtoMessage()    {}
func (*MessageExample) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}
func (m *MessageExample) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessageExample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MessageExample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageExample.Merge(m, src)
}
func (m *MessageExample) XXX_Size() int {
	return m.ProtoSize()
}
func (m *MessageExample) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageExample.DiscardUnknown(m)
}

var xxx_messageInfo_MessageExample proto.InternalMessageInfo

func (m *MessageExample_Head) Reset()         { *m = MessageExample_Head{} }
func (m *MessageExample_Head) String() string { return proto.CompactTextString(m) }
func (*MessageExample_Head) ProtoMessage()    {}
func (*MessageExample_Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1, 0}
}
func (m *MessageExample_Head) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessageExample_Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MessageExample_Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageExample_Head.Merge(m, src)
}
func (m *MessageExample_Head) XXX_Size() int {
	return m.ProtoSize()
}
func (m *MessageExample_Head) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageExample_Head.DiscardUnknown(m)
}

var xxx_messageInfo_MessageExample_Head proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RecordExample)(nil), "rms.RecordExample")
	proto.RegisterType((*MessageExample)(nil), "rms.MessageExample")
	proto.RegisterType((*MessageExample_Head)(nil), "rms.MessageExample.Head")
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6) }

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xb1, 0x6f, 0xd3, 0x40,
	0x14, 0xc6, 0x7d, 0xad, 0x29, 0xce, 0x15, 0x07, 0xd7, 0x04, 0x64, 0x05, 0xc9, 0x67, 0x32, 0x79,
	0x20, 0x09, 0x0a, 0x5b, 0x06, 0x06, 0x97, 0xa2, 0x2a, 0x52, 0xa4, 0xca, 0x59, 0x58, 0x9d, 0xe4,
	0x70, 0x2c, 0x62, 0x5f, 0x74, 0xe7, 0xa0, 0x64, 0xf3, 0x08, 0x1b, 0x53, 0x50, 0x11, 0x12, 0x65,
	0xab, 0xf8, 0x2b, 0xba, 0x91, 0x05, 0x29, 0xa3, 0xc5, 0x10, 0x95, 0x64, 0x61, 0x64, 0xce, 0x00,
	0xc8, 0x67, 0x27, 0x0d, 0x48, 0x48, 0x9d, 0xee, 0xdd, 0x7b, 0xdf, 0xfb, 0xe9, 0xbd, 0xef, 0x74,
	0x50, 0xc6, 0x23, 0xc7, 0x1f, 0xf4, 0x71, 0x65, 0x40, 0x49, 0x48, 0xd4, 0x5d, 0xea, 0xb3, 0x62,
	0xd9, 0xf5, 0xc2, 0xde, 0xb0, 0x5d, 0xe9, 0x10, 0xbf, 0xea, 0x12, 0x97, 0x54, 0x79, 0xad, 0x3d,
	0x7c, 0xc1, 0x6f, 0xfc, 0xc2, 0xa3, 0xb4, 0xa7, 0x78, 0xb8, 0x25, 0xf7, 0x02, 0x46, 0xfa, 0x0e,
	0xad, 0x3a, 0x8c, 0x0d, 0x29, 0xee, 0x96, 0xfb, 0xb8, 0xeb, 0x62, 0x5a, 0x4d, 0x8f, 0x72, 0x87,
	0x50, 0x5c, 0x7d, 0x55, 0x4b, 0x54, 0x29, 0xc5, 0x0b, 0x58, 0x06, 0xc9, 0x51, 0x3f, 0x0b, 0x4b,
	0x5f, 0x77, 0xa0, 0x6c, 0xe3, 0x0e, 0xa1, 0xdd, 0xa3, 0x74, 0x36, 0xb5, 0x04, 0x73, 0x27, 0xa4,
	0x3f, 0xf6, 0x09, 0x1d, 0xf4, 0x34, 0xc5, 0x00, 0xa6, 0x6c, 0x89, 0xd3, 0x39, 0x12, 0xec, 0xab,
	0xb4, 0xfa, 0x14, 0x4a, 0x16, 0xe9, 0x8e, 0x8f, 0x1d, 0xd6, 0xd3, 0x7e, 0xc9, 0x06, 0x30, 0xf7,
	0x6b, 0xb7, 0x2b, 0x09, 0x34, 0x45, 0x25, 0x35, 0xeb, 0x5e, 0xd2, 0xb4, 0x9a, 0x18, 0xf9, 0xab,
	0x5c, 0xa2, 0xb7, 0x37, 0x9d, 0xea, 0x73, 0x28, 0x1f, 0x8d, 0x42, 0x1c, 0x30, 0x8f, 0x04, 0x1c,
	0xf5, 0x5b, 0x36, 0x76, 0xcd, 0xfd, 0x5a, 0x61, 0x0b, 0xb5, 0x11, 0x58, 0xf7, 0x33, 0xde, 0x9d,
	0x7f, 0x0a, 0x1c, 0xfa, 0x37, 0x48, 0x35, 0xe1, 0x6e, 0x2b, 0xa4, 0xda, 0x5d, 0x03, 0x98, 0xb9,
	0x74, 0x90, 0x6f, 0x73, 0x04, 0xad, 0x71, 0x88, 0x5b, 0x21, 0xf5, 0x02, 0x37, 0x7a, 0x67, 0x00,
	0x3b, 0x91, 0xa8, 0x0f, 0xa1, 0xf4, 0xcc, 0xc3, 0xfd, 0x6e, 0xd3, 0x19, 0x68, 0x1f, 0x3f, 0x00,
	0xbe, 0x8a, 0x5a, 0x59, 0x7b, 0x56, 0x59, 0xd7, 0x52, 0x0b, 0xea, 0xb9, 0x8b, 0x18, 0x7d, 0x01,
	0x97, 0x31, 0x02, 0x0d, 0x51, 0x02, 0x8a, 0xd2, 0x10, 0xa5, 0x03, 0xa5, 0xd0, 0xc8, 0x49, 0x51,
	0x5e, 0x89, 0xa2, 0x28, 0xda, 0x29, 0x4d, 0x76, 0x60, 0xbe, 0x89, 0x19, 0x73, 0x5c, 0xbc, 0x36,
	0xf4, 0x09, 0xdc, 0x4b, 0x47, 0xd6, 0x0e, 0x32, 0xfc, 0xf6, 0x7a, 0x5c, 0x63, 0xa9, 0x09, 0x7e,
	0x36, 0x47, 0x60, 0x35, 0x31, 0x32, 0xb5, 0x9d, 0x9d, 0xea, 0x03, 0x28, 0x35, 0x99, 0x7b, 0xe2,
	0x50, 0xc7, 0xd7, 0x5e, 0xe7, 0x0d, 0x60, 0x8a, 0xd9, 0x83, 0x6c, 0xd2, 0x99, 0x24, 0xd9, 0x8f,
	0x69, 0x6f, 0x12, 0xc9, 0xad, 0x2d, 0x09, 0x4f, 0x17, 0x5f, 0x42, 0xf1, 0x18, 0x3b, 0xd7, 0xa2,
	0x5d, 0xdb, 0xbd, 0xba, 0x72, 0x7e, 0x86, 0xc0, 0xcf, 0x4f, 0x48, 0x38, 0x8f, 0x11, 0xb8, 0x88,
	0x51, 0x87, 0xdb, 0x52, 0xa8, 0x8b, 0x9b, 0xf8, 0xa0, 0x71, 0x43, 0x52, 0x95, 0x28, 0x6f, 0xb9,
	0xd3, 0xef, 0xba, 0x30, 0x5d, 0xe8, 0x60, 0xb6, 0xd0, 0x41, 0xbc, 0xd0, 0xc1, 0xe5, 0x42, 0x17,
	0xde, 0x2e, 0x75, 0xe1, 0x6c, 0xa9, 0x83, 0xd9, 0x52, 0x17, 0xe2, 0xa5, 0x2e, 0xfc, 0x38, 0x45,
	0x60, 0x75, 0x8a, 0x6e, 0x1e, 0x92, 0x20, 0xc4, 0xa3, 0xf0, 0xf3, 0x7b, 0xf4, 0xe8, 0xbf, 0xdf,
	0x23, 0x7d, 0x20, 0x1b, 0xbb, 0x1e, 0x0b, 0x31, 0x6d, 0x11, 0x1f, 0x87, 0x3d, 0x2f, 0x70, 0xdb,
	0x7b, 0xbc, 0xf0, 0xf8, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x7e, 0xc6, 0x0f, 0x6d, 0x03,
	0x00, 0x00,
}

type MessageExample_HeadFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetStr() ByteString
	GetMsgParam() uint64
}

func (this *MessageExample_Head) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *MessageExample_Head) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewMessageExample_HeadFromFace(this)
}

func (this *MessageExample_Head) GetStr() ByteString {
	return this.Str
}

func (this *MessageExample_Head) GetMsgParam() uint64 {
	return this.MsgParam
}

func NewMessageExample_HeadFromFace(that MessageExample_HeadFace) *MessageExample_Head {
	this := &MessageExample_Head{}
	this.Str = that.GetStr()
	this.MsgParam = that.GetMsgParam()
	return this
}

func (m *RecordExample) SetupContext(ctx Context) error {
	if err := ctx.RecordBodyHash(&m.BodyHash); err != nil {
		return err
	}
	if err := ctx.RecordExtensionHash(&m.ExtensionHash); err != nil {
		return err
	}
	return nil
}
func (RecordExample) GetDefaultPolymorphID() uint64 {
	return 199
}

// generated by protoc-gen-ins
func (m *RecordExample) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RecordExample) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RecordExample) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if len(m.ExtensionHash) > 0 {
		for iNdEx := len(m.ExtensionHash) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExtensionHash[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintExample(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6f
			i--
			dAtA[i] = 0xfa
		}
	}
	{
		size, err := m.BodyHash.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintExample(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x6f
			i--
			dAtA[i] = 0xf2
		}
	}
	if len(m.Str) > 0 {
		i -= len(m.Str)
		copy(dAtA[i:], m.Str)
		i = encodeVarintExample(dAtA, i, uint64(len(m.Str)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	{
		id := uint64(m.Polymorph)
		if id == 0 {
			id = 199
		}
		i = encodeVarintExample(dAtA, i, uint64(id))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	m.FieldMap.PutMessage(dAtA[i:])
	return len(dAtA) - i, nil
}

func (m *RecordExample) GetFieldMap() github_com_insolar_assured_ledger_ledger_core_v2_insproto.FieldMap {
	return m.FieldMap
}

func (m *MessageExample) SetupContext(ctx Context) error {
	if err := ctx.Record(&m.RecordExample); err != nil {
		return err
	}
	return nil
}
func (MessageExample) GetDefaultPolymorphID() uint64 {
	return 99
}

// generated by protoc-gen-ins

type MessageExampleHead = MessageExample_HeadFace

type MessageExample_Head struct {
	MessageExample
}

func (m *MessageExample) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessageExample) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MessageExample) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if len(m.MsgBytes) > 0 {
		i -= len(m.MsgBytes)
		copy(dAtA[i:], m.MsgBytes)
		i = encodeVarintExample(dAtA, i, uint64(len(m.MsgBytes)))
		i--
		dAtA[i] = 0x70
		i--
		dAtA[i] = 0xca
	}
	if m.MsgParam != 0 {
		i = encodeVarintExample(dAtA, i, uint64(m.MsgParam))
		i--
		dAtA[i] = 0x70
		i--
		dAtA[i] = 0xc0
	}
	{
		size, err := m.RecordExample.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintExample(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x8a
	i = encodeVarintExample(dAtA, i, uint64(99))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

// generated by protoc-gen-ins
func (m *MessageExample_Head) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessageExample_Head) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MessageExample_Head) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if m.MsgParam != 0 {
		i = encodeVarintExample(dAtA, i, uint64(m.MsgParam))
		i--
		dAtA[i] = 0x70
		i--
		dAtA[i] = 0xc0
	}
	if len(m.Str) > 0 {
		i -= len(m.Str)
		copy(dAtA[i:], m.Str)
		i = encodeVarintExample(dAtA, i, uint64(len(m.Str)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	i = encodeVarintExample(dAtA, i, uint64(99))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func encodeVarintExample(dAtA []byte, offset int, v uint64) int {
	offset -= sovExample(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

func (m *RecordExample) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	{
		id := uint64(m.Polymorph)
		if id == 0 {
			id = 199
		}
		n += 2 + sovExample(id)
	}
	l = len(m.Str)
	if l > 0 {
		n += 2 + l + sovExample(uint64(l))
	}
	if l = m.BodyHash.ProtoSize(); l > 0 {
		n += 2 + l + sovExample(uint64(l))
	}
	if len(m.ExtensionHash) > 0 {
		for _, e := range m.ExtensionHash {
			l = e.ProtoSize()
			n += 2 + l + sovExample(uint64(l))
		}
	}
	if l = m.FieldMap.ProtoSize(); l > 0 {
		n += 3 + l + sovExample(uint64(l))
	}
	return n
}

func (m *MessageExample) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2 + sovExample(99)
	l = m.RecordExample.ProtoSize()
	n += 2 + l + sovExample(uint64(l))
	if m.MsgParam != 0 {
		n += 2 + sovExample(uint64(m.MsgParam))
	}
	l = len(m.MsgBytes)
	if l > 0 {
		n += 2 + l + sovExample(uint64(l))
	}
	return n
}

func (m *MessageExample_Head) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2 + sovExample(99)
	l = len(m.Str)
	if l > 0 {
		n += 2 + l + sovExample(uint64(l))
	}
	if m.MsgParam != 0 {
		n += 2 + sovExample(uint64(m.MsgParam))
	}
	return n
}

func sovExample(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozExample(x uint64) (n int) {
	return sovExample(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RecordExample) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExample
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecordExample: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecordExample: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Polymorph", wireType)
			}
			m.Polymorph = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Polymorph |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Str", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Str = ByteString(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 1790:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BodyHash", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BodyHash.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1791:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtensionHash", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtensionHash = append(m.ExtensionHash, RecordExtension{})
			if err := m.ExtensionHash[len(m.ExtensionHash)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19999:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FieldMap", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FieldMap.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExample(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExample
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExample
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessageExample) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExample
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessageExample: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessageExample: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordExample", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RecordExample.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1800:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgParam", wireType)
			}
			m.MsgParam = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgParam |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 1801:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgBytes = append(m.MsgBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.MsgBytes == nil {
				m.MsgBytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExample(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExample
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExample
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessageExample_Head) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExample
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Head: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Head: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Str", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExample
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExample
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Str = ByteString(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 1800:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgParam", wireType)
			}
			m.MsgParam = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExample
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgParam |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipExample(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExample
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthExample
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipExample(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowExample
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExample
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExample
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthExample
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupExample
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthExample
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthExample        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowExample          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupExample = fmt.Errorf("proto: unexpected end of group")
)
