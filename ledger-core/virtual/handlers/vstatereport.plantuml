@startuml
state "Init" as T01_S001
T01_S001 : SMVStateReport
[*] --> T01_S001
T01_S001 --> [*] : [(...).pulseSlot.State()!=conveyor.Present]
T01_S001 --> T01_S003 : Migrate: s.migrationDefault
state "migrationDefault" as T01_S002
T01_S002 : SMVStateReport
T01_S002 --> [*]
state "stepProcess" as T01_S003
T01_S003 : SMVStateReport
T01_S003 --[dotted]> T01_S002
T01_S003 --> [*] : [(...).Payload.Status==payload.Unknown]\nError
T01_S003 --> [*] : [...>=payload.Empty&&s.gotLatestDirty()]\nError
T01_S003 --[dashed]> T01_S003 : [smachine.NotPassed]\nWaitShared
T01_S003 --> [*]
state "GetInitStateFor" as T00_S001
T00_S001 : dSMVStateReport
[*] --> T00_S001
state "s.Init" as T00_U001
T00_U001 : dSMVStateReport
T00_U001 : UNKNOWN 
T00_S001 --> T00_U001
@enduml
