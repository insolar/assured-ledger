@startuml
state "GetInitStateFor" as T00_S001
T00_S001 : SMObject
[*] --> T00_S001
T00_S001 --> T00_S002
state "Init" as T00_S002
T00_S002 : SMObject
T00_S002 --> [*] : [(...).pulseSlot.State()!=conveyor.Present]
T00_S002 --> [*] : [!ctx.Publish()]
T00_S002 --> T00_S005 : Migrate: sm.migrate
state "migrate" as T00_S010
T00_S010 : SMObject
T00_S010 --> [*] : [sm.GetState()==Unknown]
T00_S010 --[dashed]> [*] : [!ctx.Publish()]\nError
T00_S010 --> T00_S011
state "migrate.1" as T00_S011
T00_S011 : SMObject
T00_S011 --[dotted]> T00_S010
state "smf" as T00_U001
T00_U001 : SMObject
T00_U001 : UNKNOWN 
T00_S011 --[dashed]> T00_U001 : Migrate: <nil>\nReplace
state "sm.messageSender" as T00_S004 <<sdlreceive>>
state "stepGetState" as T00_S005
T00_S005 : SMObject
T00_S005 --[dotted]> T00_S010
T00_S005 --> T00_S007 : [sm.IsReady()]
T00_S005 --[dashed]> T00_S005 : [!time.Now().After()]\nWaitAnyUntil
T00_S005 --> T00_S003
state "stepGotState" as T00_S007
T00_S007 : SMObject
T00_S007 --[dotted]> T00_S010
T00_S007 --> T00_S008
state "stepReadyToWork" as T00_S008
T00_S008 : SMObject
T00_S008 --[dotted]> T00_S010
T00_S008 --> T00_S009
state "stepSendStateRequest" as T00_S003
T00_S003 : SMObject
T00_S003 --[dotted]> T00_S010
T00_S003 --> T00_S004 : PrepareAsync(ctx).WithoutAutoWakeUp()
T00_S003 --> T00_S006
state "stepWaitIndefinitely" as T00_S009
T00_S009 : SMObject
T00_S009 --[dotted]> T00_S010
T00_S009 --[dashed]> T00_S009 : Sleep
state "stepWaitState" as T00_S006
T00_S006 : SMObject
T00_S006 --[dotted]> T00_S010
T00_S006 --> T00_S007 : [sm.IsReady()]
T00_S006 --[dashed]> T00_S006 : Sleep
@enduml
