@startuml
state "Init" as T00_S001
T00_S001 : StateMachine1
[*] --> T00_S001
T00_S001 --> T00_S002
state "State1" as T00_S002
T00_S002 : StateMachine1
T00_S002 --> T00_S003 : [smachine.Passed]
T00_S002 --[dashed]> T00_S002 : [smachine.NotPassed]\nYield
T00_S002 --> T00_S008
state "State2" as T00_S003
T00_S003 : StateMachine1
T00_S003 --> T00_S004 : PrepareAsync(ctx)
T00_S003 --> T00_S006 : [ctx.SlotLink().SlotID()&1==0]
T00_S003 --> T00_S005
state "State2a" as T00_S005
T00_S005 : StateMachine1
T00_S005 --[dashed]> T00_S005 : WaitAnyUntil
T00_S005 --[dashed]> T00_S006 : WaitAnyUntil
state "State3" as T00_S006
T00_S006 : StateMachine1
T00_S006 --[dashed]> T00_S006 : [ctx.Acquire().IsNotPassed()]\n[s.count<5]...\nSleep, Poll
T00_S006 --> T00_S007
state "State4" as T00_S007
T00_S007 : StateMachine1
T00_S007 --[dashed]> T00_S007 : [ctx.GetPendingCallCount()>0]\nWaitAny
T00_S007 --[dashed]> T00_S008 : WaitAnyUntil
state "State5" as T00_S008
T00_S008 : StateMachine1
T00_S008 --> T00_S009 : [id&2==0]\nCallSubroutine
T00_S008 --[dashed]> T00_S011 : Sleep
state "State5.2" as T00_S010
T00_S010 : StateMachine1
T00_S010 --> T00_S011
state "State5.subroutineSM.1" as T00_S009 <<sdlreceive>>
T00_S009 --> T00_S010 : Migrate: <nil>
state "State6" as T00_S011
T00_S011 : StateMachine1
T00_S011 --> [*]
state "s.serviceA" as T00_S004 <<sdlreceive>>
@enduml
