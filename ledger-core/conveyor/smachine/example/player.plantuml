@startuml
state "p.adapter" as T00_S004 <<sdlreceive>>
state "stepFindPair" as T00_S002
T00_S002 : PlayerSM
T00_S002 --[dashed]> T00_S002 : [hasCollision]\n[!ctx.Publish()]...\nYield
T00_S002 --> T00_S006 : [(...).PrepareAccess().TryUse().IsAvailable()]
T00_S002 --[dashed]> T00_S003 : Sleep
state "stepFindPair.1" as T00_S003
T00_S003 : PlayerSM
T00_S003 --[dashed]> T00_S003 : [pd.players[].IsZero()]\nSleep
T00_S003 --> T00_S004 : PrepareAsync(ctx)
T00_S003 --[dashed]> T00_S005 : Sleep
state "stepFindPair.1.2" as T00_S005
T00_S005 : PlayerSM
T00_S005 --[dashed]> T00_S005 : [pd.gameFactory==nil]\n[ctx.Acquire().IsNotPassed()]...\nSleep
T00_S005 --> T00_S006
state "stepInit" as T00_S001
T00_S001 : PlayerSM
[*] --> T00_S001
T00_S001 --> T00_S002
state "stepNextGame" as T00_S009
T00_S009 : PlayerSM
T00_S009 --> [*] : [p.gamesToBePlayed<=0]
T00_S009 --> T00_S010
state "stepNextGame.1" as T00_S010
T00_S010 : PlayerSM
T00_S010 --[dashed]> T00_S010 : WaitAnyUntil
T00_S010 --[dashed]> T00_S002 : WaitAnyUntil
state "stepStartTheGame" as T00_S006
T00_S006 : PlayerSM
T00_S006 --[dashed]> T00_S006 : [gameSM==nil]\nSleep
T00_S006 --> T00_S007 : CallSubroutine
state "stepStartTheGame.2" as T00_S008
T00_S008 : PlayerSM
T00_S008 --> T00_S009
state "stepStartTheGame.gameSM.1" as T00_S007 <<sdlreceive>>
T00_S007 --> T00_S008
@enduml
