@startuml
state "GetInitStateFor" as T00_S001
T00_S001 : PulseSlotMachine
[*] --> T00_S001
T00_S001 --> T00_S002
state "stepFutureLoop" as T00_S004
T00_S004 : PulseSlotMachine
T00_S004 --[dotted]> T00_S005
T00_S004 --[dashed]> T00_S004 : [(...).pulseManager.isPreparingPulse()]\nWaitAny, Poll
state "stepInit" as T00_S002
T00_S002 : PulseSlotMachine
T00_S002 --> T00_S004 : [Future]\nMigrate: p.stepMigrateFromFuture
T00_S002 --> T00_S006 : [Present]\nMigrate: p.stepMigrateFromPresent
T00_S002 --> T00_S009 : [Past]\nMigrate: p.stepMigratePast
T00_S002 --> T00_S009 : [Antique]\nMigrate: p.stepMigrateAntique
state "stepMigrateAntique" as T00_S011
T00_S011 : PulseSlotMachine
state "stepMigrateFromFuture" as T00_S005
T00_S005 : PulseSlotMachine
T00_S005 --> T00_S006 : Migrate: p.stepMigrateFromPresent
state "stepMigrateFromPresent" as T00_S008
T00_S008 : PulseSlotMachine
T00_S008 --> T00_S009 : Migrate: p.stepMigratePast
state "stepMigratePast" as T00_S010
T00_S010 : PulseSlotMachine
T00_S010 --> T00_S003 : [p.innerMachine.IsEmpty()]
state "stepPastLoop" as T00_S009
T00_S009 : PulseSlotMachine
T00_S009 --[dotted]> T00_S011
T00_S009 --[dotted]> T00_S010
T00_S009 --[dashed]> T00_S009 : [(...).pulseManager.isPreparingPulse()]\n[repeatNow]...\n[!nextPollTime.IsZero()]...\nWaitAny, Yield, WaitAnyUntil
state "stepPreparingChange" as T00_S007
T00_S007 : PulseSlotMachine
T00_S007 --[dashed]> T00_S007 : [repeatNow]\n[!nextPollTime.IsZero()]...\n[(...).innerMachine.HasPriorityWork()]...\nRepeat(presentSlotCycleBoost), WaitAnyUntil, Yield
state "stepPresentLoop" as T00_S006
T00_S006 : PulseSlotMachine
T00_S006 --[dotted]> T00_S008
T00_S006 --[dashed]> T00_S006 : [repeatNow]\n[!nextPollTime.IsZero()]...\nRepeat(presentSlotCycleBoost), WaitAnyUntil
state "stepStop" as T00_S003
T00_S003 : PulseSlotMachine
T00_S003 --[dotted]> T00_S010
T00_S003 --> [*]
@enduml
