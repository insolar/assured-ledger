syntax = "proto3";

package rms;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/insolar/assured-ledger/ledger-core/insproto/ins.proto";
import "rms.proto";
import "proto_catalog.proto";

option (insproto.notation_all) = true;
option (insproto.context_all) = "MessageVisitor";
option (insproto.context_method_all) = "Visit";
option (insproto.message_ctx_apply_all) = "Message";
option (insproto.register_all) = "RegisterMessageType";
option (insproto.projection_names) = "Head";
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.equal_all) = true;

// LStateRequest / LStateReport
// LRegisterRequest / LRegisterResponse
// LRegisterDedupRequest

enum RegistrationFlags {
    Undefined = 0;
    Fast = 1;
    Safe = 2;
    FastSafe = 3;
}

message LRegisterRequest {
    option (insproto.id) = 1200;
    // = 1201 LVerifyRequest

    //*** Start of predefined section ***//
    reserved 1 to 15, 17, 20 to 1799;
    uint32 Polymorph = 16; // an explicit field is required to be able to alter record type
    AnyRecordLazy Record = 19 [(gogoproto.embed) = true, (insproto.ctx_apply)="MsgRecord"]; // put proper Record type here
    //*** End of predefined section ***//

    // Add custom fields below

    // RegistrationFlags must be zero for LVerifyRequest
    // RegistrationFlags is ignored for a non-first entry of a registration set
    RegistrationFlags Flags = 1800;
    Reference AnticipatedRef = 1801;

    uint32 OverrideRecordType = 1816;
    Reference OverridePrevRef = 1824;
    Reference OverrideRootRef = 1825;
    Reference OverrideReasonRef = 1826;

    Binary    ProducerSignature = 1839;
    // ProducedBy can be omitted for a non-first entry of a registration set
    Reference ProducedBy = 1840;

    // Token  ProducerToken = 1841;
}

message LRegisterResponse {
    option (insproto.id) = 1202;

    //*** Start of predefined section ***//
    reserved 1 to 1799;
    //*** End of predefined section ***//

    // Add custom fields below

    RegistrationFlags Flags = 1800;
    Reference AnticipatedRef = 1801;

    Binary    RegistrarSignature = 1805;
    // Reference RegisteredBy = 1806;
    // Token  RegistrarToken = 1807;
}

enum ReadFlags {
//    option allow_alias = true;

    PastToPresent = 0;
    PresentToPast = 1;

    FullEntryData = 2;

    ExcludeStart = 4;
    ExcludeStop  = 8;

    IncludePrevReport = 16;
    IncludeNextReport = 32;

//    TransparentRedirection = 0;
//    ExplicitRedirection = 8;
//    IgnoreRedirection = 16; // Supersedes ExplicitRedirection
}

message LReadRequest {
    option (insproto.id) = 1204;

    //*** Start of predefined section ***//
    reserved 1 to 1799;
    //*** End of predefined section ***//

    // Add custom fields below

    ReadFlags Flags = 1800;
    uint32    TargetPulse = 1801 [(gogoproto.casttype) = "PulseNumber"];
    Reference TargetRootRef = 1802;
    Reference TargetStartRef = 1803;
    Reference TargetStopRef = 1804;
    Reference TargetReasonRef = 1805;

    /*
    Filament selection modes:
    1. RootRef and ReasonRef are empty - then Start (or Stop when Start is empty) defines a filament.
    2. RootRef is not empty - then a local filament is picked for the given RootRef.
    3. RootRef and ReasonRef are not empty - filament is selected by RootRef and ReasonRef.
    4. ReasonRef is not empty - filament is selected by Start or Stop and is checked for ReasonRef.

    Traversal always goes from Start to Stop.
    When PastToPresent and empty Start then it starts with the earliest (in pulse) record of the filament.
    When PresentToPast and empty Start then it starts with the latest (in pulse) record of the filament.

    When Start is not found or doesn't match the filament then nothing will be taken.
    When Stop is not found then all entries after Start will be taken.
    */

    uint32 LimitSize = 1810;
    uint32 LimitCount = 1811;
    uint32 LimitRecordWithBodyCount = 1812;
    uint32 LimitRecordWithPayloadCount = 1813;
    uint32 LimitRecordWithExtensionsCount = 1814;
}

message LReadResponse {
    option (insproto.id) = 1205;

    //*** Start of predefined section ***//
    reserved 1 to 1799;
    //*** End of predefined section ***//

    // Add custom fields below


    repeated Entry Entries = 1800;

    message Entry {
        CatalogEntryData EntryData = 17;

        repeated bytes Payloads = 18;
        Binary RecordBinary = 19;

//        uint32   RecordSize = 1801;
//        uint32   RecordPayloadsSize = 1802;
    }

//    uint32   NextRecordSize = 1801;
//    uint32   NextRecordPayloadsSize = 1802;
}
