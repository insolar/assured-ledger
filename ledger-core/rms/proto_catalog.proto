syntax = "proto3";

package rms;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/insolar/assured-ledger/ledger-core/insproto/ins.proto";
import "rms.proto";

option (insproto.notation_all) = true;
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.equal_all) = true;

message RecordExcerptForCatalogEntry {
    reserved 1 to 15, 17 to 18, 40 to max;

    uint32 RecordType = 16;
    RecordBodyDigests PayloadDigests = 19;

    // MUST match with Excerpt portion of CatalogEntryData
    Reference PrevRef = 24;
    Reference RootRef = 25;
    Reference ReasonRef = 26;
    Reference RedirectRef = 27;
    Reference RejoinRef = 28;
}

message RecordBodyForLazy {
    option (insproto.id) = 0;
    RecordBody RecordBody = 19;
}

message CatalogEntry {
    reserved 1 to 15, 29 to 38;

    fixed64 DropOrdinal = 16 [(gogoproto.casttype)="DropOrdinal"];
    fixed64 BodyLoc = 17 [(gogoproto.casttype)="StorageLocator"];
    fixed64 PayloadLoc = 18 [(gogoproto.casttype)="StorageLocator"];
    fixed64 BodyPayloadSizes = 19; // low32 - bodySize, high32 - payloadSize

    ExtLocators ExtensionLoc = 20;
    CatalogEntryData EntryData = 21;
}

message CatalogEntryData {
    reserved 1 to 15, 17, 20 to 23, 1800 to max;

    uint32 RecordType = 16;

    Binary BodyDigest = 18;
    RecordBodyDigests PayloadDigests = 19;

    // Start of Excerpt portion
    // Fields below MUST be identical with RecordExcerptForCatalogEntry
    Reference PrevRef = 24;
    Reference RootRef = 25;
    Reference ReasonRef = 26;
    Reference RedirectRef = 27;
    Reference RejoinRef = 28;
    // End of Excerpt field portion

    Reference RecordRef = 40;
    Binary ProducerSignature = 41;
    Reference ProducedBy = 42;
    // Token ProducerToken = 43;
    Binary RegistrarSignature = 44;
    Reference RegisteredBy = 45;
    // Token RegistrarToken = 46;

    Reference RecapRef = 50;
}

message ExtLocators {
    option (insproto.id) = 0;
    option (insproto.notation) = false; // this type actually satisfies the notation, but check of proto-gen-ins is too restrictive
    repeated ExtLocator Ext = 17;
}

message ExtLocator {
    option (insproto.id) = 0;
    option (insproto.notation) = false; // this type actually satisfies the notation, but check of proto-gen-ins is too restrictive
    uint32 ExtensionID = 17 [(gogoproto.casttype)="ExtensionID"];
    fixed64 PayloadLoc = 18 [(gogoproto.casttype)="StorageLocator"];
    uint32 PayloadSize = 20;
}
