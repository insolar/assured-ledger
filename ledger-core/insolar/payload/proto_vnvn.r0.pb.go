// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: insolar/payload/proto_vnvn.r0.proto

package payload

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/insolar/assured-ledger/ledger-core/insproto"
	github_com_insolar_assured_ledger_ledger_core_pulse "github.com/insolar/assured-ledger/ledger-core/pulse"
	github_com_insolar_assured_ledger_ledger_core_reference "github.com/insolar/assured-ledger/ledger-core/reference"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CallTypeNew int32

const (
	CTInboundAPICall  CallTypeNew = 0
	CTOutboundAPICall CallTypeNew = 1
	CTMethod          CallTypeNew = 2
	CTConstructor     CallTypeNew = 3
	CTNotifyCall      CallTypeNew = 4
	CTSAGACall        CallTypeNew = 5
	CTParallelCall    CallTypeNew = 6
	CTScheduleCall    CallTypeNew = 7
)

var CallTypeNew_name = map[int32]string{
	0: "CTInboundAPICall",
	1: "CTOutboundAPICall",
	2: "CTMethod",
	3: "CTConstructor",
	4: "CTNotifyCall",
	5: "CTSAGACall",
	6: "CTParallelCall",
	7: "CTScheduleCall",
}

var CallTypeNew_value = map[string]int32{
	"CTInboundAPICall":  0,
	"CTOutboundAPICall": 1,
	"CTMethod":          2,
	"CTConstructor":     3,
	"CTNotifyCall":      4,
	"CTSAGACall":        5,
	"CTParallelCall":    6,
	"CTScheduleCall":    7,
}

func (x CallTypeNew) String() string {
	return proto.EnumName(CallTypeNew_name, int32(x))
}

func (CallTypeNew) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{0}
}

type VStateReport_StateStatus int32

const (
	Unknown  VStateReport_StateStatus = 0
	Ready    VStateReport_StateStatus = 1
	Empty    VStateReport_StateStatus = 2
	Inactive VStateReport_StateStatus = 3
	Missing  VStateReport_StateStatus = 4
)

var VStateReport_StateStatus_name = map[int32]string{
	0: "Unknown",
	1: "Ready",
	2: "Empty",
	3: "Inactive",
	4: "Missing",
}

var VStateReport_StateStatus_value = map[string]int32{
	"Unknown":  0,
	"Ready":    1,
	"Empty":    2,
	"Inactive": 3,
	"Missing":  4,
}

func (x VStateReport_StateStatus) String() string {
	return proto.EnumName(VStateReport_StateStatus_name, int32(x))
}

func (VStateReport_StateStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{3, 0}
}

type VFindCallResponse_CallState int32

const (
	MissingCall VFindCallResponse_CallState = 0
	UnknownCall VFindCallResponse_CallState = 1
	FoundCall   VFindCallResponse_CallState = 2
)

var VFindCallResponse_CallState_name = map[int32]string{
	0: "MissingCall",
	1: "UnknownCall",
	2: "FoundCall",
}

var VFindCallResponse_CallState_value = map[string]int32{
	"MissingCall": 0,
	"UnknownCall": 1,
	"FoundCall":   2,
}

func (x VFindCallResponse_CallState) String() string {
	return proto.EnumName(VFindCallResponse_CallState_name, int32(x))
}

func (VFindCallResponse_CallState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{11, 0}
}

type VCallRequest struct {
	CallType                CallTypeNew                                                    `protobuf:"varint,20,opt,name=CallType,proto3,enum=payload.CallTypeNew" json:"CallType"`
	CallFlags               CallFlags                                                      `protobuf:"varint,21,opt,name=CallFlags,proto3,casttype=CallFlags" json:"CallFlags"`
	CallAsOf                github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,22,opt,name=CallAsOf,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"CallAsOf"`
	Caller                  github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,23,opt,name=Caller,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Caller"`
	Callee                  github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,24,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	CallSiteDeclaration     github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,25,opt,name=CallSiteDeclaration,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"CallSiteDeclaration"`
	CallSiteMethod          string                                                         `protobuf:"bytes,26,opt,name=CallSiteMethod,proto3" json:"CallSiteMethod"`
	CallSequence            uint32                                                         `protobuf:"varint,27,opt,name=CallSequence,proto3" json:"CallSequence"`
	CallReason              github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,28,opt,name=CallReason,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"CallReason"`
	RootTX                  github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,29,opt,name=RootTX,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"RootTX"`
	CallTX                  github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,30,opt,name=CallTX,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"CallTX"`
	ExpenseCenter           github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,31,opt,name=ExpenseCenter,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"ExpenseCenter"`
	ResourceCenter          github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,32,opt,name=ResourceCenter,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"ResourceCenter"`
	PayloadHash             []byte                                                         `protobuf:"bytes,33,opt,name=PayloadHash,proto3" json:"PayloadHash"`
	DelegationSpec          CallDelegationToken                                            `protobuf:"bytes,34,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
	ProducerSignature       []byte                                                         `protobuf:"bytes,36,opt,name=ProducerSignature,proto3" json:"ProducerSignature"`
	RegistrarSignature      []byte                                                         `protobuf:"bytes,37,opt,name=RegistrarSignature,proto3" json:"RegistrarSignature"`
	RegistrarDelegationSpec CallDelegationToken                                            `protobuf:"bytes,38,opt,name=RegistrarDelegationSpec,proto3" json:"RegistrarDelegationSpec"`
	CallRequestFlags        CallRequestFlags                                               `protobuf:"varint,40,opt,name=CallRequestFlags,proto3,casttype=CallRequestFlags" json:"CallRequestFlags"`
	KnownCalleeIncoming     github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,41,opt,name=KnownCalleeIncoming,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"KnownCalleeIncoming"`
	EntryHeadHash           []byte                                                         `protobuf:"bytes,42,opt,name=EntryHeadHash,proto3" json:"EntryHeadHash"`
	CallOutgoing            github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,43,opt,name=CallOutgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"CallOutgoing"`
	TXExpiry                github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,44,opt,name=TXExpiry,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"TXExpiry"`
	SecurityContext         []byte                                                         `protobuf:"bytes,45,opt,name=SecurityContext,proto3" json:"SecurityContext"`
	TXContext               []byte                                                         `protobuf:"bytes,46,opt,name=TXContext,proto3" json:"TXContext"`
	Arguments               []byte                                                         `protobuf:"bytes,47,opt,name=Arguments,proto3" json:"Arguments"`
	ExtensionHashes         []byte                                                         `protobuf:"bytes,48,opt,name=ExtensionHashes,proto3" json:"ExtensionHashes"`
	Extensions              []byte                                                         `protobuf:"bytes,49,opt,name=Extensions,proto3" json:"Extensions"`
}

func (m *VCallRequest) Reset()         { *m = VCallRequest{} }
func (m *VCallRequest) String() string { return proto.CompactTextString(m) }
func (*VCallRequest) ProtoMessage()    {}
func (*VCallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{0}
}
func (m *VCallRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VCallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VCallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VCallRequest.Merge(m, src)
}
func (m *VCallRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VCallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VCallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VCallRequest proto.InternalMessageInfo

func (m *VCallRequest) GetCallType() CallTypeNew {
	if m != nil {
		return m.CallType
	}
	return CTInboundAPICall
}

func (m *VCallRequest) GetCallFlags() CallFlags {
	if m != nil {
		return m.CallFlags
	}
	return 0
}

func (m *VCallRequest) GetCallAsOf() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.CallAsOf
	}
	return 0
}

func (m *VCallRequest) GetCallSiteMethod() string {
	if m != nil {
		return m.CallSiteMethod
	}
	return ""
}

func (m *VCallRequest) GetCallSequence() uint32 {
	if m != nil {
		return m.CallSequence
	}
	return 0
}

func (m *VCallRequest) GetPayloadHash() []byte {
	if m != nil {
		return m.PayloadHash
	}
	return nil
}

func (m *VCallRequest) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VCallRequest) GetProducerSignature() []byte {
	if m != nil {
		return m.ProducerSignature
	}
	return nil
}

func (m *VCallRequest) GetRegistrarSignature() []byte {
	if m != nil {
		return m.RegistrarSignature
	}
	return nil
}

func (m *VCallRequest) GetRegistrarDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.RegistrarDelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VCallRequest) GetCallRequestFlags() CallRequestFlags {
	if m != nil {
		return m.CallRequestFlags
	}
	return 0
}

func (m *VCallRequest) GetEntryHeadHash() []byte {
	if m != nil {
		return m.EntryHeadHash
	}
	return nil
}

func (m *VCallRequest) GetTXExpiry() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.TXExpiry
	}
	return 0
}

func (m *VCallRequest) GetSecurityContext() []byte {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

func (m *VCallRequest) GetTXContext() []byte {
	if m != nil {
		return m.TXContext
	}
	return nil
}

func (m *VCallRequest) GetArguments() []byte {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *VCallRequest) GetExtensionHashes() []byte {
	if m != nil {
		return m.ExtensionHashes
	}
	return nil
}

func (m *VCallRequest) GetExtensions() []byte {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type VCallResult struct {
	CallType                CallTypeNew                                                    `protobuf:"varint,20,opt,name=CallType,proto3,enum=payload.CallTypeNew" json:"CallType"`
	CallFlags               CallFlags                                                      `protobuf:"varint,21,opt,name=CallFlags,proto3,casttype=CallFlags" json:"CallFlags"`
	CallAsOf                github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,22,opt,name=CallAsOf,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"CallAsOf"`
	Caller                  github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,23,opt,name=Caller,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Caller"`
	Callee                  github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,24,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	ResultFlags             []byte                                                         `protobuf:"bytes,25,opt,name=ResultFlags,proto3" json:"ResultFlags"`
	CallOutgoing            github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,26,opt,name=CallOutgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"CallOutgoing"`
	CallIncoming            github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,27,opt,name=CallIncoming,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"CallIncoming"`
	PayloadHash             []byte                                                         `protobuf:"bytes,28,opt,name=PayloadHash,proto3" json:"PayloadHash"`
	DelegationSpec          CallDelegationToken                                            `protobuf:"bytes,29,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
	CallIncomingResult      github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,31,opt,name=CallIncomingResult,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"CallIncomingResult"`
	ProducerSignature       []byte                                                         `protobuf:"bytes,32,opt,name=ProducerSignature,proto3" json:"ProducerSignature"`
	RegistrarSignature      []byte                                                         `protobuf:"bytes,33,opt,name=RegistrarSignature,proto3" json:"RegistrarSignature"`
	RegistrarDelegationSpec CallDelegationToken                                            `protobuf:"bytes,34,opt,name=RegistrarDelegationSpec,proto3" json:"RegistrarDelegationSpec"`
	EntryHeadHash           []byte                                                         `protobuf:"bytes,36,opt,name=EntryHeadHash,proto3" json:"EntryHeadHash"`
	SecurityContext         []byte                                                         `protobuf:"bytes,37,opt,name=SecurityContext,proto3" json:"SecurityContext"`
	ReturnArguments         []byte                                                         `protobuf:"bytes,38,opt,name=ReturnArguments,proto3" json:"ReturnArguments"`
	ExtensionHashes         []byte                                                         `protobuf:"bytes,39,opt,name=ExtensionHashes,proto3" json:"ExtensionHashes"`
	Extensions              []byte                                                         `protobuf:"bytes,40,opt,name=Extensions,proto3" json:"Extensions"`
}

func (m *VCallResult) Reset()         { *m = VCallResult{} }
func (m *VCallResult) String() string { return proto.CompactTextString(m) }
func (*VCallResult) ProtoMessage()    {}
func (*VCallResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{1}
}
func (m *VCallResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VCallResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VCallResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VCallResult.Merge(m, src)
}
func (m *VCallResult) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VCallResult) XXX_DiscardUnknown() {
	xxx_messageInfo_VCallResult.DiscardUnknown(m)
}

var xxx_messageInfo_VCallResult proto.InternalMessageInfo

func (m *VCallResult) GetCallType() CallTypeNew {
	if m != nil {
		return m.CallType
	}
	return CTInboundAPICall
}

func (m *VCallResult) GetCallFlags() CallFlags {
	if m != nil {
		return m.CallFlags
	}
	return 0
}

func (m *VCallResult) GetCallAsOf() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.CallAsOf
	}
	return 0
}

func (m *VCallResult) GetResultFlags() []byte {
	if m != nil {
		return m.ResultFlags
	}
	return nil
}

func (m *VCallResult) GetPayloadHash() []byte {
	if m != nil {
		return m.PayloadHash
	}
	return nil
}

func (m *VCallResult) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VCallResult) GetProducerSignature() []byte {
	if m != nil {
		return m.ProducerSignature
	}
	return nil
}

func (m *VCallResult) GetRegistrarSignature() []byte {
	if m != nil {
		return m.RegistrarSignature
	}
	return nil
}

func (m *VCallResult) GetRegistrarDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.RegistrarDelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VCallResult) GetEntryHeadHash() []byte {
	if m != nil {
		return m.EntryHeadHash
	}
	return nil
}

func (m *VCallResult) GetSecurityContext() []byte {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

func (m *VCallResult) GetReturnArguments() []byte {
	if m != nil {
		return m.ReturnArguments
	}
	return nil
}

func (m *VCallResult) GetExtensionHashes() []byte {
	if m != nil {
		return m.ExtensionHashes
	}
	return nil
}

func (m *VCallResult) GetExtensions() []byte {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type VStateRequest struct {
	AsOf                  github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,20,opt,name=AsOf,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"AsOf"`
	Callee                github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	RequestedContent      StateRequestContentFlags                                       `protobuf:"varint,22,opt,name=RequestedContent,proto3,customtype=StateRequestContentFlags" json:"RequestedContent"`
	RequestedContentLimit []byte                                                         `protobuf:"bytes,23,opt,name=RequestedContentLimit,proto3" json:"RequestedContentLimit"`
	SupportedExtensions   []byte                                                         `protobuf:"bytes,24,opt,name=SupportedExtensions,proto3" json:"SupportedExtensions"`
	DelegationSpec        CallDelegationToken                                            `protobuf:"bytes,25,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
	ProducerSignature     []byte                                                         `protobuf:"bytes,27,opt,name=ProducerSignature,proto3" json:"ProducerSignature"`
	CallRequestFlags      int32                                                          `protobuf:"varint,28,opt,name=CallRequestFlags,proto3" json:"CallRequestFlags"`
}

func (m *VStateRequest) Reset()         { *m = VStateRequest{} }
func (m *VStateRequest) String() string { return proto.CompactTextString(m) }
func (*VStateRequest) ProtoMessage()    {}
func (*VStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{2}
}
func (m *VStateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VStateRequest.Merge(m, src)
}
func (m *VStateRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VStateRequest proto.InternalMessageInfo

func (m *VStateRequest) GetAsOf() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.AsOf
	}
	return 0
}

func (m *VStateRequest) GetRequestedContentLimit() []byte {
	if m != nil {
		return m.RequestedContentLimit
	}
	return nil
}

func (m *VStateRequest) GetSupportedExtensions() []byte {
	if m != nil {
		return m.SupportedExtensions
	}
	return nil
}

func (m *VStateRequest) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VStateRequest) GetProducerSignature() []byte {
	if m != nil {
		return m.ProducerSignature
	}
	return nil
}

func (m *VStateRequest) GetCallRequestFlags() int32 {
	if m != nil {
		return m.CallRequestFlags
	}
	return 0
}

type VStateReport struct {
	Status                        VStateReport_StateStatus                                       `protobuf:"varint,37,opt,name=Status,proto3,enum=payload.VStateReport_StateStatus" json:"Status"`
	AsOf                          github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,20,opt,name=AsOf,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"AsOf"`
	Callee                        github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	DelegationSpec                CallDelegationToken                                            `protobuf:"bytes,23,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
	UnorderedPendingCount         int32                                                          `protobuf:"varint,25,opt,name=UnorderedPendingCount,proto3" json:"UnorderedPendingCount"`
	UnorderedPendingEarliestPulse github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,26,opt,name=UnorderedPendingEarliestPulse,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"UnorderedPendingEarliestPulse"`
	OrderedPendingCount           int32                                                          `protobuf:"varint,27,opt,name=OrderedPendingCount,proto3" json:"OrderedPendingCount"`
	OrderedPendingEarliestPulse   github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,28,opt,name=OrderedPendingEarliestPulse,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"OrderedPendingEarliestPulse"`
	PreRegisteredQueueCount       int32                                                          `protobuf:"varint,29,opt,name=PreRegisteredQueueCount,proto3" json:"PreRegisteredQueueCount"`
	PreRegisteredEarliestPulse    github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,30,opt,name=PreRegisteredEarliestPulse,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"PreRegisteredEarliestPulse"`
	PriorityCallQueueCount        int32                                                          `protobuf:"varint,31,opt,name=PriorityCallQueueCount,proto3" json:"PriorityCallQueueCount"`
	LatestValidatedState          github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,32,opt,name=LatestValidatedState,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"LatestValidatedState"`
	LatestValidatedCode           github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,33,opt,name=LatestValidatedCode,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"LatestValidatedCode"`
	LatestDirtyState              github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,34,opt,name=LatestDirtyState,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"LatestDirtyState"`
	LatestDirtyCode               github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,35,opt,name=LatestDirtyCode,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"LatestDirtyCode"`
	ProvidedContent               *VStateReport_ProvidedContentBody                              `protobuf:"bytes,36,opt,name=ProvidedContent,proto3" json:"ProvidedContent,omitempty"`
}

func (m *VStateReport) Reset()         { *m = VStateReport{} }
func (m *VStateReport) String() string { return proto.CompactTextString(m) }
func (*VStateReport) ProtoMessage()    {}
func (*VStateReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{3}
}
func (m *VStateReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VStateReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VStateReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VStateReport.Merge(m, src)
}
func (m *VStateReport) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VStateReport) XXX_DiscardUnknown() {
	xxx_messageInfo_VStateReport.DiscardUnknown(m)
}

var xxx_messageInfo_VStateReport proto.InternalMessageInfo

func (m *VStateReport) GetStatus() VStateReport_StateStatus {
	if m != nil {
		return m.Status
	}
	return Unknown
}

func (m *VStateReport) GetAsOf() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.AsOf
	}
	return 0
}

func (m *VStateReport) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VStateReport) GetUnorderedPendingCount() int32 {
	if m != nil {
		return m.UnorderedPendingCount
	}
	return 0
}

func (m *VStateReport) GetUnorderedPendingEarliestPulse() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.UnorderedPendingEarliestPulse
	}
	return 0
}

func (m *VStateReport) GetOrderedPendingCount() int32 {
	if m != nil {
		return m.OrderedPendingCount
	}
	return 0
}

func (m *VStateReport) GetOrderedPendingEarliestPulse() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.OrderedPendingEarliestPulse
	}
	return 0
}

func (m *VStateReport) GetPreRegisteredQueueCount() int32 {
	if m != nil {
		return m.PreRegisteredQueueCount
	}
	return 0
}

func (m *VStateReport) GetPreRegisteredEarliestPulse() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.PreRegisteredEarliestPulse
	}
	return 0
}

func (m *VStateReport) GetPriorityCallQueueCount() int32 {
	if m != nil {
		return m.PriorityCallQueueCount
	}
	return 0
}

func (m *VStateReport) GetProvidedContent() *VStateReport_ProvidedContentBody {
	if m != nil {
		return m.ProvidedContent
	}
	return nil
}

type VStateReport_ProvidedContentBody struct {
	LatestValidatedState *ObjectState                                                     `protobuf:"bytes,21,opt,name=LatestValidatedState,proto3" json:"LatestValidatedState,omitempty"`
	LatestDirtyState     *ObjectState                                                     `protobuf:"bytes,22,opt,name=LatestDirtyState,proto3" json:"LatestDirtyState,omitempty"`
	LatestValidatedCode  *ObjectState                                                     `protobuf:"bytes,23,opt,name=LatestValidatedCode,proto3" json:"LatestValidatedCode,omitempty"`
	LatestDirtyCode      *ObjectState                                                     `protobuf:"bytes,24,opt,name=LatestDirtyCode,proto3" json:"LatestDirtyCode,omitempty"`
	OrderedQueue         []github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,25,rep,name=OrderedQueue,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"OrderedQueue"`
	UnorderedQueue       []github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,26,rep,name=UnorderedQueue,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"UnorderedQueue"`
}

func (m *VStateReport_ProvidedContentBody) Reset()         { *m = VStateReport_ProvidedContentBody{} }
func (m *VStateReport_ProvidedContentBody) String() string { return proto.CompactTextString(m) }
func (*VStateReport_ProvidedContentBody) ProtoMessage()    {}
func (*VStateReport_ProvidedContentBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{3, 0}
}
func (m *VStateReport_ProvidedContentBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VStateReport_ProvidedContentBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VStateReport_ProvidedContentBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VStateReport_ProvidedContentBody.Merge(m, src)
}
func (m *VStateReport_ProvidedContentBody) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VStateReport_ProvidedContentBody) XXX_DiscardUnknown() {
	xxx_messageInfo_VStateReport_ProvidedContentBody.DiscardUnknown(m)
}

var xxx_messageInfo_VStateReport_ProvidedContentBody proto.InternalMessageInfo

func (m *VStateReport_ProvidedContentBody) GetLatestValidatedState() *ObjectState {
	if m != nil {
		return m.LatestValidatedState
	}
	return nil
}

func (m *VStateReport_ProvidedContentBody) GetLatestDirtyState() *ObjectState {
	if m != nil {
		return m.LatestDirtyState
	}
	return nil
}

func (m *VStateReport_ProvidedContentBody) GetLatestValidatedCode() *ObjectState {
	if m != nil {
		return m.LatestValidatedCode
	}
	return nil
}

func (m *VStateReport_ProvidedContentBody) GetLatestDirtyCode() *ObjectState {
	if m != nil {
		return m.LatestDirtyCode
	}
	return nil
}

type ObjectState struct {
	Reference     github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,20,opt,name=Reference,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"Reference"`
	Parent        github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Parent,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Parent"`
	Class         github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,22,opt,name=Class,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Class"`
	State         []byte                                                         `protobuf:"bytes,23,opt,name=State,proto3" json:"State"`
	PreviousState []byte                                                         `protobuf:"bytes,24,opt,name=PreviousState,proto3" json:"PreviousState"`
	Deactivated   bool                                                           `protobuf:"varint,25,opt,name=Deactivated,proto3" json:"Deactivated"`
}

func (m *ObjectState) Reset()         { *m = ObjectState{} }
func (m *ObjectState) String() string { return proto.CompactTextString(m) }
func (*ObjectState) ProtoMessage()    {}
func (*ObjectState) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{4}
}
func (m *ObjectState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ObjectState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectState.Merge(m, src)
}
func (m *ObjectState) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ObjectState) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectState.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectState proto.InternalMessageInfo

func (m *ObjectState) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ObjectState) GetPreviousState() []byte {
	if m != nil {
		return m.PreviousState
	}
	return nil
}

func (m *ObjectState) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

type VPendingDelegationRequest struct {
	Object         github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,20,opt,name=Object,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Object"`
	Request        github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Request,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Request"`
	DelegationSpec CallDelegationToken                                            `protobuf:"bytes,22,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
}

func (m *VPendingDelegationRequest) Reset()         { *m = VPendingDelegationRequest{} }
func (m *VPendingDelegationRequest) String() string { return proto.CompactTextString(m) }
func (*VPendingDelegationRequest) ProtoMessage()    {}
func (*VPendingDelegationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{5}
}
func (m *VPendingDelegationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VPendingDelegationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VPendingDelegationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPendingDelegationRequest.Merge(m, src)
}
func (m *VPendingDelegationRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VPendingDelegationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VPendingDelegationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VPendingDelegationRequest proto.InternalMessageInfo

func (m *VPendingDelegationRequest) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

type VDelegatedRequestFinished struct {
	CallType       CallTypeNew                                                    `protobuf:"varint,20,opt,name=CallType,proto3,enum=payload.CallTypeNew" json:"CallType"`
	CallFlags      CallFlags                                                      `protobuf:"varint,21,opt,name=CallFlags,proto3,casttype=CallFlags" json:"CallFlags"`
	Callee         github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,22,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	ResultFlags    []byte                                                         `protobuf:"bytes,23,opt,name=ResultFlags,proto3" json:"ResultFlags"`
	CallOutgoing   github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,24,opt,name=CallOutgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"CallOutgoing"`
	CallIncoming   github_com_insolar_assured_ledger_ledger_core_reference.Local  `protobuf:"bytes,25,opt,name=CallIncoming,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Local" json:"CallIncoming"`
	DelegationSpec CallDelegationToken                                            `protobuf:"bytes,26,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
	EntryHeadHash  []byte                                                         `protobuf:"bytes,28,opt,name=EntryHeadHash,proto3" json:"EntryHeadHash"`
	LatestState    *ObjectState                                                   `protobuf:"bytes,29,opt,name=LatestState,proto3" json:"LatestState,omitempty"`
}

func (m *VDelegatedRequestFinished) Reset()         { *m = VDelegatedRequestFinished{} }
func (m *VDelegatedRequestFinished) String() string { return proto.CompactTextString(m) }
func (*VDelegatedRequestFinished) ProtoMessage()    {}
func (*VDelegatedRequestFinished) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{6}
}
func (m *VDelegatedRequestFinished) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VDelegatedRequestFinished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VDelegatedRequestFinished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VDelegatedRequestFinished.Merge(m, src)
}
func (m *VDelegatedRequestFinished) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VDelegatedRequestFinished) XXX_DiscardUnknown() {
	xxx_messageInfo_VDelegatedRequestFinished.DiscardUnknown(m)
}

var xxx_messageInfo_VDelegatedRequestFinished proto.InternalMessageInfo

func (m *VDelegatedRequestFinished) GetCallType() CallTypeNew {
	if m != nil {
		return m.CallType
	}
	return CTInboundAPICall
}

func (m *VDelegatedRequestFinished) GetCallFlags() CallFlags {
	if m != nil {
		return m.CallFlags
	}
	return 0
}

func (m *VDelegatedRequestFinished) GetResultFlags() []byte {
	if m != nil {
		return m.ResultFlags
	}
	return nil
}

func (m *VDelegatedRequestFinished) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

func (m *VDelegatedRequestFinished) GetEntryHeadHash() []byte {
	if m != nil {
		return m.EntryHeadHash
	}
	return nil
}

func (m *VDelegatedRequestFinished) GetLatestState() *ObjectState {
	if m != nil {
		return m.LatestState
	}
	return nil
}

type VDelegatedCallRequest struct {
	Callee         github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,20,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	CallFlags      CallFlags                                                      `protobuf:"varint,21,opt,name=CallFlags,proto3,customtype=CallFlags" json:"CallFlags"`
	CallOutgoing   github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,22,opt,name=CallOutgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"CallOutgoing"`
	RecordHead     github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,23,opt,name=RecordHead,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"RecordHead"`
	CallIncoming   github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,24,opt,name=CallIncoming,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"CallIncoming"`
	DelegationSpec CallDelegationToken                                            `protobuf:"bytes,25,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
}

func (m *VDelegatedCallRequest) Reset()         { *m = VDelegatedCallRequest{} }
func (m *VDelegatedCallRequest) String() string { return proto.CompactTextString(m) }
func (*VDelegatedCallRequest) ProtoMessage()    {}
func (*VDelegatedCallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{7}
}
func (m *VDelegatedCallRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VDelegatedCallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VDelegatedCallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VDelegatedCallRequest.Merge(m, src)
}
func (m *VDelegatedCallRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VDelegatedCallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VDelegatedCallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VDelegatedCallRequest proto.InternalMessageInfo

func (m *VDelegatedCallRequest) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

type VDelegatedCallResponse struct {
	CallIncoming   github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,20,opt,name=CallIncoming,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"CallIncoming"`
	DelegationSpec CallDelegationToken                                            `protobuf:"bytes,21,opt,name=DelegationSpec,proto3" json:"DelegationSpec"`
}

func (m *VDelegatedCallResponse) Reset()         { *m = VDelegatedCallResponse{} }
func (m *VDelegatedCallResponse) String() string { return proto.CompactTextString(m) }
func (*VDelegatedCallResponse) ProtoMessage()    {}
func (*VDelegatedCallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{8}
}
func (m *VDelegatedCallResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VDelegatedCallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VDelegatedCallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VDelegatedCallResponse.Merge(m, src)
}
func (m *VDelegatedCallResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VDelegatedCallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VDelegatedCallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VDelegatedCallResponse proto.InternalMessageInfo

func (m *VDelegatedCallResponse) GetDelegationSpec() CallDelegationToken {
	if m != nil {
		return m.DelegationSpec
	}
	return CallDelegationToken{}
}

type CallDelegationToken struct {
	TokenTypeAndFlags CallDelegationTokenType                                        `protobuf:"varint,20,opt,name=TokenTypeAndFlags,proto3,customtype=CallDelegationTokenType" json:"TokenTypeAndFlags"`
	Approver          github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Approver,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Approver"`
	DelegateTo        github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,22,opt,name=DelegateTo,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"DelegateTo"`
	PulseNumber       github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,23,opt,name=PulseNumber,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"PulseNumber"`
	Callee            github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,24,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	Caller            github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,25,opt,name=Caller,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Caller"`
	Outgoing          github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,26,opt,name=Outgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Outgoing"`
	ApproverSignature []byte                                                         `protobuf:"bytes,27,opt,name=ApproverSignature,proto3" json:"ApproverSignature"`
}

func (m *CallDelegationToken) Reset()         { *m = CallDelegationToken{} }
func (m *CallDelegationToken) String() string { return proto.CompactTextString(m) }
func (*CallDelegationToken) ProtoMessage()    {}
func (*CallDelegationToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{9}
}
func (m *CallDelegationToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CallDelegationToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CallDelegationToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallDelegationToken.Merge(m, src)
}
func (m *CallDelegationToken) XXX_Size() int {
	return m.ProtoSize()
}
func (m *CallDelegationToken) XXX_DiscardUnknown() {
	xxx_messageInfo_CallDelegationToken.DiscardUnknown(m)
}

var xxx_messageInfo_CallDelegationToken proto.InternalMessageInfo

func (m *CallDelegationToken) GetPulseNumber() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.PulseNumber
	}
	return 0
}

func (m *CallDelegationToken) GetApproverSignature() []byte {
	if m != nil {
		return m.ApproverSignature
	}
	return nil
}

type VFindCallRequest struct {
	LookAt   github_com_insolar_assured_ledger_ledger_core_pulse.Number     `protobuf:"varint,20,opt,name=LookAt,proto3,casttype=github.com/insolar/assured-ledger/ledger-core/pulse.Number" json:"LookAt"`
	Callee   github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	Outgoing github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,22,opt,name=Outgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Outgoing"`
}

func (m *VFindCallRequest) Reset()         { *m = VFindCallRequest{} }
func (m *VFindCallRequest) String() string { return proto.CompactTextString(m) }
func (*VFindCallRequest) ProtoMessage()    {}
func (*VFindCallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{10}
}
func (m *VFindCallRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VFindCallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VFindCallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VFindCallRequest.Merge(m, src)
}
func (m *VFindCallRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VFindCallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VFindCallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VFindCallRequest proto.InternalMessageInfo

func (m *VFindCallRequest) GetLookAt() github_com_insolar_assured_ledger_ledger_core_pulse.Number {
	if m != nil {
		return m.LookAt
	}
	return 0
}

type VFindCallResponse struct {
	Callee     github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,20,opt,name=Callee,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Callee"`
	Outgoing   github_com_insolar_assured_ledger_ledger_core_reference.Global `protobuf:"bytes,21,opt,name=Outgoing,proto3,customtype=github.com/insolar/assured-ledger/ledger-core/reference.Global" json:"Outgoing"`
	Status     VFindCallResponse_CallState                                    `protobuf:"varint,22,opt,name=Status,proto3,enum=payload.VFindCallResponse_CallState" json:"Status"`
	CallResult *VCallResult                                                   `protobuf:"bytes,23,opt,name=CallResult,proto3" json:"CallResult,omitempty"`
}

func (m *VFindCallResponse) Reset()         { *m = VFindCallResponse{} }
func (m *VFindCallResponse) String() string { return proto.CompactTextString(m) }
func (*VFindCallResponse) ProtoMessage()    {}
func (*VFindCallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a268ff04305613a, []int{11}
}
func (m *VFindCallResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VFindCallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VFindCallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VFindCallResponse.Merge(m, src)
}
func (m *VFindCallResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *VFindCallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VFindCallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VFindCallResponse proto.InternalMessageInfo

func (m *VFindCallResponse) GetStatus() VFindCallResponse_CallState {
	if m != nil {
		return m.Status
	}
	return MissingCall
}

func (m *VFindCallResponse) GetCallResult() *VCallResult {
	if m != nil {
		return m.CallResult
	}
	return nil
}

func init() {
	proto.RegisterEnum("payload.CallTypeNew", CallTypeNew_name, CallTypeNew_value)
	proto.RegisterEnum("payload.VStateReport_StateStatus", VStateReport_StateStatus_name, VStateReport_StateStatus_value)
	proto.RegisterEnum("payload.VFindCallResponse_CallState", VFindCallResponse_CallState_name, VFindCallResponse_CallState_value)
	proto.RegisterType((*VCallRequest)(nil), "payload.VCallRequest")
	proto.RegisterType((*VCallResult)(nil), "payload.VCallResult")
	proto.RegisterType((*VStateRequest)(nil), "payload.VStateRequest")
	proto.RegisterType((*VStateReport)(nil), "payload.VStateReport")
	proto.RegisterType((*VStateReport_ProvidedContentBody)(nil), "payload.VStateReport.ProvidedContentBody")
	proto.RegisterType((*ObjectState)(nil), "payload.ObjectState")
	proto.RegisterType((*VPendingDelegationRequest)(nil), "payload.VPendingDelegationRequest")
	proto.RegisterType((*VDelegatedRequestFinished)(nil), "payload.VDelegatedRequestFinished")
	proto.RegisterType((*VDelegatedCallRequest)(nil), "payload.VDelegatedCallRequest")
	proto.RegisterType((*VDelegatedCallResponse)(nil), "payload.VDelegatedCallResponse")
	proto.RegisterType((*CallDelegationToken)(nil), "payload.CallDelegationToken")
	proto.RegisterType((*VFindCallRequest)(nil), "payload.VFindCallRequest")
	proto.RegisterType((*VFindCallResponse)(nil), "payload.VFindCallResponse")
}

func init() {
	proto.RegisterFile("insolar/payload/proto_vnvn.r0.proto", fileDescriptor_8a268ff04305613a)
}

var fileDescriptor_8a268ff04305613a = []byte{
	// 2158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x4d, 0x6c, 0x23, 0x49,
	0x15, 0x76, 0x4f, 0x7e, 0x9c, 0x3c, 0xe7, 0xc7, 0xa9, 0xfc, 0x75, 0xfe, 0x6c, 0x8f, 0x27, 0x3b,
	0x64, 0x87, 0x1d, 0x67, 0xc8, 0xa2, 0x3d, 0x44, 0xc3, 0x42, 0xe2, 0x24, 0x3b, 0xd9, 0xcd, 0x4c,
	0xbc, 0x8e, 0x37, 0x0a, 0x08, 0xc1, 0xb6, 0xdd, 0x15, 0xa7, 0x67, 0x3a, 0x55, 0xa6, 0xba, 0x3b,
	0x13, 0x4b, 0x88, 0x23, 0xe2, 0xc0, 0x01, 0x2e, 0x48, 0xb3, 0x27, 0x0e, 0x20, 0x10, 0x42, 0x42,
	0x42, 0x42, 0xe2, 0xb8, 0x17, 0xa4, 0x3d, 0x20, 0x98, 0x63, 0xb4, 0x48, 0x23, 0x98, 0xb9, 0x00,
	0x0b, 0x68, 0xf8, 0x39, 0xed, 0x09, 0x75, 0x55, 0xb7, 0x5d, 0x6e, 0x77, 0x32, 0xb3, 0x99, 0x76,
	0x04, 0xd2, 0x9e, 0xdc, 0xfd, 0xde, 0xab, 0xf7, 0xd5, 0xab, 0xf7, 0xea, 0xbd, 0x57, 0xd5, 0x86,
	0x2b, 0x06, 0xb1, 0xa8, 0xa9, 0xb1, 0xc5, 0x9a, 0x56, 0x37, 0xa9, 0xa6, 0x2f, 0xd6, 0x18, 0xb5,
	0xe9, 0xd7, 0x8f, 0xc8, 0x11, 0xc9, 0xb1, 0x1b, 0x39, 0xfe, 0x86, 0xe2, 0x1e, 0x73, 0xfa, 0x7a,
	0xd5, 0xb0, 0x0f, 0x9c, 0x72, 0xae, 0x42, 0x0f, 0x17, 0xab, 0xb4, 0x4a, 0x85, 0x74, 0xd9, 0xd9,
	0xe7, 0x6f, 0xfc, 0x85, 0x3f, 0x89, 0x71, 0xd3, 0x5f, 0x92, 0xc4, 0x7d, 0x1c, 0xcd, 0xb2, 0x1c,
	0x86, 0xf5, 0xeb, 0x26, 0xd6, 0xab, 0x98, 0x2d, 0x8a, 0x9f, 0xeb, 0x15, 0xca, 0xb0, 0x2b, 0x22,
	0x54, 0x18, 0xc4, 0x12, 0x1a, 0xb2, 0x1f, 0x25, 0x61, 0x60, 0x37, 0xaf, 0x99, 0x66, 0x11, 0x7f,
	0xc3, 0xc1, 0x96, 0x8d, 0x5e, 0x83, 0x3e, 0xf7, 0xb5, 0x54, 0xaf, 0x61, 0x75, 0x2c, 0xa3, 0x2c,
	0x0c, 0x2d, 0x8d, 0xe5, 0xbc, 0xd9, 0xe5, 0x7c, 0xc6, 0x1d, 0x7c, 0x7f, 0xb5, 0xfb, 0x83, 0x47,
	0xe9, 0x58, 0xb1, 0x21, 0x8b, 0x5e, 0x85, 0x7e, 0xf7, 0x79, 0xc3, 0xd4, 0xaa, 0x96, 0x3a, 0x9e,
	0x51, 0x16, 0x06, 0x57, 0xc7, 0x5d, 0x91, 0x8f, 0x1f, 0xa5, 0x9b, 0x8c, 0xa7, 0x3f, 0xc8, 0xc4,
	0x8a, 0xcd, 0x57, 0x54, 0x16, 0x60, 0x2b, 0xd6, 0xf6, 0xbe, 0x3a, 0xc1, 0xc7, 0x6c, 0x78, 0x63,
	0x96, 0x3f, 0x99, 0x65, 0x35, 0xc7, 0xb4, 0x70, 0xee, 0x8e, 0x73, 0x58, 0xc6, 0x8c, 0x83, 0x34,
	0xf4, 0xa2, 0x32, 0xf4, 0xba, 0xcf, 0x98, 0xa9, 0x93, 0x19, 0x65, 0x61, 0x60, 0xf5, 0x4d, 0x17,
	0xe1, 0xc3, 0x47, 0xe9, 0xd7, 0x3f, 0x19, 0x02, 0xc3, 0xfb, 0x98, 0x61, 0x52, 0xc1, 0xb9, 0x37,
	0x4c, 0x5a, 0xd6, 0x4c, 0x8e, 0xe2, 0x69, 0x6e, 0x60, 0x60, 0x55, 0xed, 0x10, 0x06, 0x46, 0xc7,
	0x30, 0xea, 0x3e, 0xed, 0x18, 0x36, 0x5e, 0xc3, 0x15, 0x53, 0x63, 0x9a, 0x6d, 0x50, 0xa2, 0x4e,
	0x71, 0xc0, 0x8d, 0x68, 0x00, 0x8b, 0x61, 0x10, 0xe8, 0x15, 0x18, 0xf2, 0xc9, 0xb7, 0xb1, 0x7d,
	0x40, 0x75, 0x75, 0x3a, 0xa3, 0x2c, 0xf4, 0x7b, 0x21, 0x10, 0xe0, 0xa1, 0x05, 0x18, 0xe0, 0x14,
	0x37, 0x9e, 0x48, 0x05, 0xab, 0x33, 0xdc, 0xaf, 0x42, 0xb6, 0x85, 0x83, 0xee, 0x02, 0x88, 0xc8,
	0xd3, 0x2c, 0x4a, 0xd4, 0xd9, 0xc8, 0x57, 0x4e, 0xd2, 0xee, 0x7a, 0xa8, 0x48, 0xa9, 0x5d, 0xda,
	0x53, 0xe7, 0xa2, 0xf7, 0x90, 0xd0, 0xec, 0x47, 0x41, 0x69, 0x4f, 0x4d, 0x75, 0x26, 0x0a, 0x4a,
	0x7b, 0xa8, 0x06, 0x83, 0xeb, 0xc7, 0x35, 0x4c, 0x2c, 0x9c, 0xc7, 0xc4, 0xc6, 0x4c, 0x4d, 0x47,
	0x0e, 0xd5, 0x0a, 0x80, 0x18, 0x0c, 0x15, 0xb1, 0x45, 0x1d, 0x56, 0xf1, 0x21, 0x33, 0x91, 0x43,
	0x06, 0x10, 0xd0, 0x55, 0x48, 0x14, 0x44, 0xce, 0xb9, 0xa5, 0x59, 0x07, 0xea, 0x65, 0x0e, 0x28,
	0x42, 0x48, 0x66, 0xa0, 0x37, 0x61, 0x68, 0x0d, 0x9b, 0xb8, 0xca, 0xe3, 0x74, 0xa7, 0x86, 0x2b,
	0x6a, 0x36, 0xa3, 0x2c, 0x24, 0x96, 0x66, 0x5b, 0x52, 0x56, 0x53, 0xa4, 0x44, 0xef, 0x61, 0xe2,
	0xc7, 0x6d, 0xeb, 0x48, 0xb4, 0x04, 0x23, 0x05, 0x46, 0x75, 0xa7, 0x82, 0xd9, 0x8e, 0x51, 0x25,
	0x9a, 0xed, 0x30, 0xac, 0xce, 0x4b, 0xc8, 0xed, 0x6c, 0xf4, 0x79, 0x40, 0x45, 0x5c, 0x35, 0x2c,
	0x9b, 0x69, 0xd2, 0xa0, 0x97, 0xa4, 0x41, 0x21, 0x7c, 0xf4, 0x55, 0x98, 0x6c, 0x50, 0x03, 0xd3,
	0xbf, 0xfa, 0xdc, 0xd3, 0x3f, 0x4d, 0x05, 0xba, 0x05, 0x49, 0x29, 0x9f, 0x8b, 0x7c, 0xbc, 0x90,
	0x51, 0x16, 0x7a, 0x56, 0x67, 0xbd, 0xdc, 0xda, 0xc6, 0xe7, 0x3e, 0x68, 0xa3, 0xa2, 0x6f, 0xc2,
	0xe8, 0x5b, 0x84, 0xde, 0x27, 0x22, 0x01, 0x6d, 0x92, 0x0a, 0x3d, 0x34, 0x48, 0x55, 0x7d, 0x39,
	0x72, 0xf7, 0x87, 0xc1, 0xa0, 0x6b, 0x30, 0xb8, 0x4e, 0x6c, 0x56, 0xbf, 0x85, 0xbd, 0x28, 0xb8,
	0x26, 0x2d, 0x6b, 0x2b, 0x0b, 0x1d, 0x8a, 0x9c, 0xb3, 0xed, 0xd8, 0x55, 0xea, 0x4e, 0xf1, 0xb3,
	0x5c, 0x74, 0xd3, 0x9b, 0xe2, 0x17, 0xce, 0x3b, 0xc5, 0x2d, 0x5a, 0xf1, 0x66, 0xd8, 0xa2, 0xde,
	0x2d, 0x5b, 0xa5, 0xbd, 0xf5, 0xe3, 0x9a, 0xc1, 0xea, 0xea, 0x2b, 0xd1, 0x96, 0x2d, 0x5f, 0x2f,
	0xca, 0xc1, 0xf0, 0x0e, 0xae, 0x38, 0xcc, 0xb0, 0xeb, 0x79, 0x4a, 0x6c, 0x7c, 0x6c, 0xab, 0xd7,
	0xa5, 0x05, 0x08, 0x32, 0x51, 0x16, 0xfa, 0x4b, 0x7b, 0xbe, 0x64, 0x4e, 0x92, 0x6c, 0x92, 0x5d,
	0x99, 0x15, 0x56, 0x75, 0x0e, 0x31, 0xb1, 0x2d, 0x75, 0x51, 0x96, 0x69, 0x90, 0x5d, 0xdc, 0xf5,
	0x63, 0x1b, 0x13, 0xcb, 0xa0, 0xc4, 0x5d, 0x5b, 0x6c, 0xa9, 0x37, 0x64, 0xdc, 0x00, 0x13, 0xcd,
	0x03, 0x34, 0x48, 0x96, 0xfa, 0x39, 0x49, 0x54, 0xa2, 0x2f, 0xf7, 0xbc, 0x7f, 0x92, 0xfe, 0x4b,
	0x3c, 0xfb, 0x5b, 0x80, 0x84, 0xd7, 0x6d, 0x58, 0x8e, 0xf9, 0x69, 0xb3, 0xf1, 0x3f, 0xdb, 0x6c,
	0x5c, 0x85, 0x84, 0x70, 0x91, 0x58, 0xe2, 0x29, 0x39, 0x01, 0x4b, 0x8c, 0xb6, 0x8d, 0x37, 0xdd,
	0xd9, 0x8d, 0xe7, 0xc1, 0x35, 0x52, 0xd1, 0x4c, 0x47, 0xe0, 0x1a, 0x29, 0x28, 0x50, 0x86, 0x66,
	0x9f, 0xbf, 0x0c, 0xcd, 0x9d, 0xbb, 0x0c, 0xd5, 0x01, 0xc9, 0x73, 0x10, 0x8b, 0xed, 0x55, 0xf9,
	0x08, 0x0d, 0x0d, 0x01, 0x09, 0xaf, 0x80, 0x99, 0xf3, 0x54, 0xc0, 0xcb, 0xe7, 0xaf, 0x80, 0xd9,
	0x17, 0xaf, 0x80, 0x6d, 0x95, 0x63, 0xfe, 0xf4, 0xca, 0x11, 0x92, 0x66, 0x5f, 0x3a, 0x2b, 0xcd,
	0xe6, 0x60, 0xb8, 0x88, 0x6d, 0x87, 0x91, 0x66, 0x22, 0xbd, 0x2a, 0xcb, 0x07, 0x98, 0x61, 0xe9,
	0xf4, 0x33, 0xcf, 0x9f, 0x4e, 0x17, 0xce, 0x48, 0xa7, 0x7f, 0x8d, 0x67, 0x7f, 0xd7, 0x0d, 0x83,
	0xbb, 0x3b, 0xb6, 0x66, 0x63, 0xff, 0xf4, 0xf6, 0x15, 0xe8, 0xe6, 0xf9, 0x6d, 0x2c, 0xd2, 0xfc,
	0xd6, 0xdd, 0x92, 0xdb, 0x30, 0xcf, 0xb8, 0x9d, 0xc9, 0x3b, 0x05, 0x48, 0x7a, 0xa6, 0x60, 0x9d,
	0x2f, 0x39, 0xb1, 0x79, 0xae, 0xee, 0x59, 0x9d, 0xf7, 0xd0, 0x54, 0xd9, 0x5e, 0x4f, 0x44, 0x6a,
	0x62, 0x82, 0xa3, 0xd1, 0x32, 0x8c, 0x07, 0x69, 0x5b, 0xc6, 0xa1, 0x61, 0x7b, 0x09, 0x5a, 0xac,
	0x6d, 0xb8, 0x08, 0x7a, 0x0d, 0x46, 0x77, 0x9c, 0x5a, 0x8d, 0x32, 0x1b, 0xeb, 0x92, 0x57, 0x54,
	0x69, 0x64, 0x98, 0x40, 0x48, 0x3e, 0x98, 0x8a, 0xb6, 0x2d, 0x9d, 0x39, 0x7b, 0x53, 0xde, 0x08,
	0x69, 0x01, 0x67, 0xf9, 0x2a, 0x8a, 0x21, 0x6d, 0x5c, 0x1e, 0x50, 0x1f, 0xc5, 0xb3, 0xbf, 0x1a,
	0x81, 0x01, 0x3f, 0xa0, 0x5c, 0xab, 0xd0, 0x17, 0xa1, 0xd7, 0x7d, 0x75, 0x2c, 0xbe, 0x2b, 0x86,
	0x96, 0x2e, 0x37, 0x2c, 0x90, 0xc5, 0x72, 0xfc, 0x59, 0x08, 0x7a, 0x10, 0xde, 0xb0, 0xff, 0xfb,
	0x80, 0x6c, 0x77, 0xe5, 0xe4, 0xb9, 0x5d, 0xb9, 0x0c, 0xe3, 0xef, 0x10, 0xca, 0x74, 0xcc, 0xb0,
	0x5e, 0xc0, 0x44, 0x37, 0x48, 0x35, 0x4f, 0x1d, 0x62, 0xf3, 0xe8, 0xf0, 0x7d, 0x13, 0x2e, 0x82,
	0xbe, 0xab, 0xc0, 0x5c, 0x90, 0xb3, 0xae, 0x31, 0xd3, 0xc0, 0x96, 0x5d, 0x70, 0x97, 0x87, 0x97,
	0xde, 0xe8, 0x56, 0xf8, 0x6c, 0x30, 0x77, 0x67, 0x6c, 0x87, 0x18, 0x32, 0x23, 0x19, 0x12, 0x26,
	0x80, 0xbe, 0xa3, 0xc0, 0xcc, 0xf6, 0x19, 0x46, 0xcc, 0x46, 0x6a, 0xc4, 0x59, 0x50, 0xe8, 0x75,
	0x98, 0x2c, 0x30, 0x2c, 0x6a, 0x88, 0x2b, 0xf4, 0xb6, 0x83, 0x1d, 0x2c, 0xcc, 0x98, 0x93, 0xcc,
	0x38, 0x4d, 0x08, 0x7d, 0x5b, 0x81, 0xe9, 0x16, 0x5e, 0xab, 0x25, 0xa9, 0x48, 0x2d, 0x39, 0x03,
	0x09, 0xdd, 0x84, 0x89, 0x02, 0x33, 0x28, 0xaf, 0x52, 0x9a, 0x69, 0x4a, 0x76, 0xa4, 0x25, 0x3b,
	0x4e, 0x91, 0x41, 0xdf, 0x82, 0xb1, 0x2d, 0xcd, 0xc6, 0x96, 0xbd, 0xab, 0x99, 0x86, 0xae, 0xd9,
	0x58, 0xe7, 0x9b, 0xb9, 0x03, 0x87, 0xfc, 0x50, 0x1c, 0xf7, 0x90, 0x19, 0xa0, 0xe7, 0xa9, 0xee,
	0x77, 0x10, 0x91, 0x1e, 0x32, 0x43, 0x60, 0xd0, 0x11, 0x24, 0x05, 0x79, 0xcd, 0x60, 0x76, 0x5d,
	0x58, 0x9e, 0x8d, 0x1c, 0xba, 0x0d, 0x03, 0xd9, 0x30, 0x2c, 0xd1, 0xb8, 0xc5, 0x57, 0x22, 0x87,
	0x0d, 0x42, 0xa0, 0x2f, 0xc3, 0x70, 0x81, 0xd1, 0x23, 0x43, 0x6f, 0x16, 0xd7, 0x79, 0x9e, 0xcd,
	0x5e, 0x0e, 0x4f, 0xeb, 0x01, 0xe1, 0x55, 0xaa, 0xd7, 0x79, 0x34, 0x29, 0xc5, 0xa0, 0x9e, 0xe9,
	0x9f, 0x74, 0xc3, 0x68, 0x88, 0x38, 0xba, 0x73, 0x4a, 0x78, 0x8d, 0x73, 0xdc, 0xe6, 0x69, 0x6f,
	0xbb, 0x7c, 0x17, 0x57, 0x6c, 0xce, 0xf3, 0x20, 0xc2, 0xc3, 0x65, 0x23, 0xc4, 0x61, 0x13, 0xcf,
	0xd4, 0xd5, 0xee, 0x80, 0xad, 0xf0, 0xb0, 0x9b, 0x7c, 0xa6, 0xaa, 0xd0, 0x30, 0x5a, 0x6b, 0x77,
	0xa7, 0xfa, 0x4c, 0x4d, 0x6d, 0xee, 0xb9, 0x0b, 0x03, 0x5e, 0xc2, 0xe2, 0xfb, 0x53, 0x9d, 0xca,
	0x74, 0x45, 0x78, 0xb5, 0xdb, 0xa2, 0x1b, 0x11, 0x18, 0x6a, 0x64, 0x78, 0x81, 0x36, 0x1d, 0x29,
	0x5a, 0x40, 0xfb, 0x72, 0xdf, 0x4f, 0x4f, 0xd2, 0xca, 0xfb, 0x27, 0xe9, 0x58, 0xf6, 0x2d, 0x48,
	0x48, 0xed, 0x02, 0x4a, 0x40, 0xfc, 0x1d, 0x72, 0x8f, 0xd0, 0xfb, 0x24, 0x19, 0x43, 0xfd, 0xd0,
	0x53, 0xc4, 0x9a, 0x5e, 0x4f, 0x2a, 0xee, 0xe3, 0xfa, 0x61, 0xcd, 0xae, 0x27, 0x2f, 0xa1, 0x01,
	0xe8, 0xdb, 0x24, 0x5a, 0xc5, 0x36, 0x8e, 0x70, 0xb2, 0xcb, 0x1d, 0x70, 0xdb, 0xb0, 0x2c, 0x83,
	0x54, 0x93, 0xdd, 0xbc, 0x6f, 0xf9, 0x5b, 0x3c, 0xfb, 0xf3, 0x2e, 0x48, 0x48, 0x0b, 0x8c, 0xaa,
	0xd0, 0x5f, 0xf4, 0x67, 0xc4, 0x5b, 0x8f, 0x48, 0xcf, 0x4e, 0x4d, 0xdd, 0x6e, 0x0b, 0x52, 0xd0,
	0x98, 0xbb, 0x91, 0x3a, 0xd0, 0x82, 0x08, 0xcd, 0xe8, 0x5d, 0xe8, 0xc9, 0x9b, 0x9a, 0x65, 0xf1,
	0x38, 0x8f, 0x16, 0x42, 0x28, 0x46, 0xd3, 0xd0, 0x23, 0x76, 0x92, 0xdc, 0x13, 0x0b, 0x92, 0x7b,
	0x98, 0x2a, 0x30, 0x7c, 0x64, 0x50, 0xc7, 0x12, 0x32, 0x72, 0xf7, 0xdb, 0xca, 0x72, 0xcf, 0xcb,
	0x6b, 0x98, 0x3b, 0xca, 0xdd, 0x19, 0xbc, 0xad, 0xe9, 0xf3, 0xcf, 0xcb, 0x12, 0x23, 0xfb, 0xeb,
	0x4b, 0x30, 0xb5, 0xeb, 0x15, 0xe5, 0x66, 0x8f, 0xe4, 0x9f, 0x61, 0xca, 0xd0, 0x2b, 0x7c, 0xe9,
	0x79, 0x2e, 0xd2, 0x35, 0x15, 0x9a, 0x91, 0x0e, 0x71, 0x0f, 0xae, 0x03, 0x8e, 0xf3, 0x55, 0x87,
	0x34, 0x8f, 0x13, 0xe7, 0x6d, 0x1e, 0x79, 0xa4, 0xff, 0x3d, 0x9e, 0xfd, 0x45, 0x0f, 0x4c, 0xed,
	0x7a, 0x2c, 0xac, 0xfb, 0x3d, 0xbc, 0x41, 0x0c, 0xeb, 0x00, 0xeb, 0x17, 0x7d, 0x9f, 0xe6, 0xb7,
	0xdf, 0x13, 0x17, 0x75, 0x0f, 0x35, 0xf9, 0xbc, 0xf7, 0x50, 0xea, 0xc5, 0xde, 0x43, 0x4d, 0x75,
	0xf6, 0x1e, 0xaa, 0x3d, 0x8e, 0xa6, 0xcf, 0x7d, 0x08, 0x69, 0xbb, 0x1c, 0x99, 0x3d, 0xfd, 0x72,
	0xe4, 0x26, 0x24, 0x44, 0x8d, 0x12, 0x3b, 0x7f, 0xee, 0x99, 0x25, 0x4d, 0x16, 0xe7, 0x11, 0xfb,
	0x8f, 0x78, 0xf6, 0xf7, 0xdd, 0x30, 0xde, 0x8c, 0x58, 0xf9, 0x53, 0x73, 0x33, 0x80, 0xc6, 0x3a,
	0x16, 0x40, 0xa7, 0x45, 0xf6, 0x87, 0x67, 0x45, 0x36, 0x09, 0x44, 0x53, 0xf4, 0xf1, 0xdd, 0x1a,
	0x4e, 0x77, 0x01, 0x8a, 0xb8, 0x42, 0x99, 0xee, 0xae, 0x7c, 0x07, 0x6e, 0x8e, 0x25, 0xed, 0xbe,
	0x6d, 0x8d, 0xd0, 0x55, 0x3b, 0x63, 0xdb, 0x19, 0xb1, 0x3b, 0xf5, 0x42, 0x39, 0xf0, 0x69, 0x3c,
	0xfb, 0x07, 0x05, 0x26, 0x82, 0x11, 0x65, 0xd5, 0x28, 0xb1, 0x70, 0x9b, 0x75, 0x63, 0x17, 0x6e,
	0xdd, 0xf8, 0x0b, 0x59, 0xf7, 0xcf, 0x78, 0xf6, 0xfb, 0xbd, 0xe2, 0x43, 0x7f, 0x60, 0x10, 0x7a,
	0x1b, 0x46, 0xf8, 0x83, 0x9b, 0xb0, 0x57, 0x88, 0x2e, 0x22, 0x5a, 0x5c, 0xab, 0x5c, 0xf1, 0xec,
	0x9b, 0x0c, 0x19, 0xe7, 0x8a, 0xf3, 0x89, 0xb7, 0x8f, 0x46, 0xfb, 0xd0, 0xb7, 0x52, 0xab, 0x31,
	0x7a, 0x84, 0x59, 0x07, 0xca, 0x60, 0x43, 0xb7, 0x1b, 0xdf, 0xbe, 0xbb, 0x4a, 0xb4, 0x03, 0xbb,
	0x49, 0xd2, 0x8e, 0x0e, 0x20, 0xc1, 0x8f, 0xc5, 0xe2, 0xf0, 0xcc, 0x37, 0x53, 0x74, 0xc7, 0x70,
	0x59, 0xf5, 0x85, 0x7c, 0x87, 0x69, 0x7e, 0x4f, 0x9a, 0xea, 0xd8, 0xf7, 0xa4, 0x7d, 0xe8, 0x0b,
	0x7c, 0xbf, 0x89, 0x34, 0x0a, 0x1a, 0x59, 0x6e, 0x09, 0x46, 0xfc, 0x88, 0x38, 0xe5, 0x26, 0xb3,
	0x8d, 0xcd, 0xf7, 0xc4, 0xbf, 0xe2, 0xd9, 0xdf, 0x5c, 0x82, 0xe4, 0xee, 0x86, 0x41, 0x5a, 0xca,
	0xc7, 0xd7, 0xa0, 0x77, 0x8b, 0xd2, 0x7b, 0x2b, 0x76, 0xc4, 0x97, 0x8b, 0x9e, 0xd6, 0x0b, 0xb9,
	0x5e, 0x94, 0xd7, 0x7e, 0xa2, 0x73, 0x6b, 0xcf, 0xd7, 0xf1, 0xdf, 0xf1, 0xec, 0x8f, 0xba, 0x60,
	0x44, 0x5a, 0x47, 0x2f, 0x69, 0x5e, 0x44, 0x1d, 0x96, 0x0d, 0x1d, 0xef, 0x60, 0x90, 0xad, 0x36,
	0x2e, 0xac, 0x27, 0x78, 0xff, 0x3b, 0xdf, 0xbc, 0xd9, 0x08, 0xda, 0xcd, 0x53, 0x73, 0xb3, 0x7b,
	0x69, 0xde, 0x59, 0x2f, 0xfb, 0xff, 0x4b, 0xe2, 0x9f, 0xde, 0x82, 0x57, 0x02, 0xd2, 0xf7, 0x6b,
	0xaf, 0xeb, 0x91, 0xa4, 0xb3, 0x37, 0x45, 0xbf, 0x21, 0xce, 0x43, 0xc3, 0x90, 0xf0, 0x8e, 0xaa,
	0x2e, 0x2d, 0x19, 0x73, 0x09, 0xde, 0x61, 0x97, 0x13, 0x14, 0x34, 0x08, 0xfd, 0x1b, 0xd4, 0x11,
	0xf3, 0x4a, 0x5e, 0xe2, 0x6e, 0xfa, 0x4f, 0xfc, 0xda, 0x8f, 0x15, 0x48, 0x48, 0xed, 0x3a, 0x1a,
	0x83, 0x64, 0xbe, 0xb4, 0x49, 0xca, 0xae, 0xe4, 0x4a, 0x61, 0xd3, 0x53, 0x36, 0x0e, 0x23, 0xf9,
	0xd2, 0xb6, 0x63, 0xb7, 0x90, 0x15, 0xf7, 0xb4, 0x9c, 0x2f, 0x89, 0xff, 0x62, 0x25, 0x2f, 0xa1,
	0x11, 0x18, 0xcc, 0x97, 0xf2, 0x94, 0x58, 0x36, 0x73, 0x2a, 0x36, 0x65, 0xc9, 0x2e, 0x94, 0x84,
	0x81, 0x7c, 0xe9, 0x0e, 0xb5, 0x8d, 0x7d, 0x7e, 0x17, 0x98, 0xec, 0x46, 0x43, 0x00, 0xf9, 0xd2,
	0xce, 0xca, 0x1b, 0x2b, 0xfc, 0xbd, 0x07, 0x21, 0x18, 0xca, 0x97, 0x0a, 0x1a, 0x73, 0x5d, 0x67,
	0x72, 0x5a, 0xaf, 0xa0, 0xed, 0x54, 0x0e, 0xb0, 0xee, 0x98, 0x98, 0xd3, 0xe2, 0xab, 0xef, 0x3e,
	0xfc, 0x53, 0x2a, 0xf6, 0xc1, 0xe3, 0x94, 0xf2, 0xf0, 0x71, 0x4a, 0x39, 0x79, 0x9c, 0x52, 0xfe,
	0xf8, 0x38, 0x15, 0xfb, 0xde, 0x93, 0x54, 0xec, 0x87, 0x4f, 0x52, 0xca, 0xc3, 0x27, 0xa9, 0xd8,
	0xc9, 0x93, 0x54, 0xec, 0xcf, 0x0f, 0xd2, 0xca, 0xd3, 0x07, 0x69, 0xe5, 0xe3, 0x07, 0xe9, 0xf8,
	0x6d, 0x6c, 0x59, 0x5a, 0x15, 0xff, 0xec, 0xbd, 0xf4, 0xa8, 0x7f, 0x9b, 0xe9, 0x91, 0x5c, 0x53,
	0x7f, 0xf9, 0x5e, 0x7a, 0xc8, 0x7b, 0xf5, 0x3e, 0xb7, 0x95, 0x7b, 0xf9, 0xbf, 0x14, 0x5f, 0xfd,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x10, 0x45, 0x91, 0x46, 0x29, 0x00, 0x00,
}

func (m *VCallRequest) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1001)
}

const TypeVCallRequestPolymorthID uint64 = 1001

func (*VCallRequest) GetDefaultPolymorphID() uint64 {
	return 1001
}

func (m *VCallRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VCallRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VCallRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if len(m.Extensions) > 0 {
		i -= len(m.Extensions)
		copy(dAtA[i:], m.Extensions)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.Extensions)+1))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ExtensionHashes) > 0 {
		i -= len(m.ExtensionHashes)
		copy(dAtA[i:], m.ExtensionHashes)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ExtensionHashes)+1))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x82
	}
	if len(m.Arguments) > 0 {
		i -= len(m.Arguments)
		copy(dAtA[i:], m.Arguments)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.Arguments)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xfa
	}
	if len(m.TXContext) > 0 {
		i -= len(m.TXContext)
		copy(dAtA[i:], m.TXContext)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.TXContext)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xf2
	}
	if len(m.SecurityContext) > 0 {
		i -= len(m.SecurityContext)
		copy(dAtA[i:], m.SecurityContext)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.SecurityContext)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xea
	}
	if m.TXExpiry != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.TXExpiry))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xe0
	}
	{
		size := m.CallOutgoing.ProtoSize()
		i -= size
		if _, err := m.CallOutgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xda
	if len(m.EntryHeadHash) > 0 {
		i -= len(m.EntryHeadHash)
		copy(dAtA[i:], m.EntryHeadHash)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.EntryHeadHash)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xd2
	}
	{
		size := m.KnownCalleeIncoming.ProtoSize()
		i -= size
		if _, err := m.KnownCalleeIncoming.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xca
	if m.CallRequestFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallRequestFlags))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc0
	}
	{
		size, err := m.RegistrarDelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x2
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.RegistrarSignature) > 0 {
		i -= len(m.RegistrarSignature)
		copy(dAtA[i:], m.RegistrarSignature)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.RegistrarSignature)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xaa
	}
	if len(m.ProducerSignature) > 0 {
		i -= len(m.ProducerSignature)
		copy(dAtA[i:], m.ProducerSignature)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ProducerSignature)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xa2
	}
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x2
			i--
			dAtA[i] = 0x92
		}
	}
	if len(m.PayloadHash) > 0 {
		i -= len(m.PayloadHash)
		copy(dAtA[i:], m.PayloadHash)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.PayloadHash)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x8a
	}
	{
		size := m.ResourceCenter.ProtoSize()
		i -= size
		if _, err := m.ResourceCenter.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x82
	{
		size := m.ExpenseCenter.ProtoSize()
		i -= size
		if _, err := m.ExpenseCenter.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xfa
	{
		size := m.CallTX.ProtoSize()
		i -= size
		if _, err := m.CallTX.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf2
	{
		size := m.RootTX.ProtoSize()
		i -= size
		if _, err := m.RootTX.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xea
	{
		size := m.CallReason.ProtoSize()
		i -= size
		if _, err := m.CallReason.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe2
	if m.CallSequence != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallSequence))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd8
	}
	if len(m.CallSiteMethod) > 0 {
		i -= len(m.CallSiteMethod)
		copy(dAtA[i:], m.CallSiteMethod)
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.CallSiteMethod)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	{
		size := m.CallSiteDeclaration.ProtoSize()
		i -= size
		if _, err := m.CallSiteDeclaration.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xca
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc2
	{
		size := m.Caller.ProtoSize()
		i -= size
		if _, err := m.Caller.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xba
	if m.CallAsOf != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallAsOf))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if m.CallFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallFlags))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.CallType != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1001))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VCallResult) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1002)
}

const TypeVCallResultPolymorthID uint64 = 1002

func (*VCallResult) GetDefaultPolymorphID() uint64 {
	return 1002
}

func (m *VCallResult) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VCallResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VCallResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if len(m.Extensions) > 0 {
		i -= len(m.Extensions)
		copy(dAtA[i:], m.Extensions)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.Extensions)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	if len(m.ExtensionHashes) > 0 {
		i -= len(m.ExtensionHashes)
		copy(dAtA[i:], m.ExtensionHashes)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ExtensionHashes)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xba
	}
	if len(m.ReturnArguments) > 0 {
		i -= len(m.ReturnArguments)
		copy(dAtA[i:], m.ReturnArguments)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ReturnArguments)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xb2
	}
	if len(m.SecurityContext) > 0 {
		i -= len(m.SecurityContext)
		copy(dAtA[i:], m.SecurityContext)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.SecurityContext)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xaa
	}
	if len(m.EntryHeadHash) > 0 {
		i -= len(m.EntryHeadHash)
		copy(dAtA[i:], m.EntryHeadHash)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.EntryHeadHash)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xa2
	}
	{
		size, err := m.RegistrarDelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x2
			i--
			dAtA[i] = 0x92
		}
	}
	if len(m.RegistrarSignature) > 0 {
		i -= len(m.RegistrarSignature)
		copy(dAtA[i:], m.RegistrarSignature)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.RegistrarSignature)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ProducerSignature) > 0 {
		i -= len(m.ProducerSignature)
		copy(dAtA[i:], m.ProducerSignature)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ProducerSignature)+1))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	{
		size := m.CallIncomingResult.ProtoSize()
		i -= size
		if _, err := m.CallIncomingResult.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xfa
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xea
		}
	}
	if len(m.PayloadHash) > 0 {
		i -= len(m.PayloadHash)
		copy(dAtA[i:], m.PayloadHash)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.PayloadHash)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	{
		size := m.CallIncoming.ProtoSize()
		i -= size
		if _, err := m.CallIncoming.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xda
	{
		size := m.CallOutgoing.ProtoSize()
		i -= size
		if _, err := m.CallOutgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd2
	if len(m.ResultFlags) > 0 {
		i -= len(m.ResultFlags)
		copy(dAtA[i:], m.ResultFlags)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ResultFlags)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc2
	{
		size := m.Caller.ProtoSize()
		i -= size
		if _, err := m.Caller.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xba
	if m.CallAsOf != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallAsOf))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if m.CallFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallFlags))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.CallType != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1002))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VStateRequest) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1003)
}

const TypeVStateRequestPolymorthID uint64 = 1003

func (*VStateRequest) GetDefaultPolymorphID() uint64 {
	return 1003
}

func (m *VStateRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VStateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VStateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if m.CallRequestFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallRequestFlags))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe0
	}
	if len(m.ProducerSignature) > 0 {
		i -= len(m.ProducerSignature)
		copy(dAtA[i:], m.ProducerSignature)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ProducerSignature)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xca
		}
	}
	if len(m.SupportedExtensions) > 0 {
		i -= len(m.SupportedExtensions)
		copy(dAtA[i:], m.SupportedExtensions)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.SupportedExtensions)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.RequestedContentLimit) > 0 {
		i -= len(m.RequestedContentLimit)
		copy(dAtA[i:], m.RequestedContentLimit)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.RequestedContentLimit)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if m.RequestedContent != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.RequestedContent))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	if m.AsOf != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.AsOf))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1003))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VStateReport) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1004)
}

const TypeVStateReportPolymorthID uint64 = 1004

func (*VStateReport) GetDefaultPolymorphID() uint64 {
	return 1004
}

func (m *VStateReport) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VStateReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VStateReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if m.Status != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xa8
	}
	if m.ProvidedContent != nil {
		{
			size, err := m.ProvidedContent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xa2
			}
		}
	}
	{
		size := m.LatestDirtyCode.ProtoSize()
		i -= size
		if _, err := m.LatestDirtyCode.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x9a
	{
		size := m.LatestDirtyState.ProtoSize()
		i -= size
		if _, err := m.LatestDirtyState.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x92
	{
		size := m.LatestValidatedCode.ProtoSize()
		i -= size
		if _, err := m.LatestValidatedCode.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x8a
	{
		size := m.LatestValidatedState.ProtoSize()
		i -= size
		if _, err := m.LatestValidatedState.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x82
	if m.PriorityCallQueueCount != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.PriorityCallQueueCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf8
	}
	if m.PreRegisteredEarliestPulse != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.PreRegisteredEarliestPulse))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.PreRegisteredQueueCount != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.PreRegisteredQueueCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe8
	}
	if m.OrderedPendingEarliestPulse != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.OrderedPendingEarliestPulse))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe0
	}
	if m.OrderedPendingCount != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.OrderedPendingCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd8
	}
	if m.UnorderedPendingEarliestPulse != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.UnorderedPendingEarliestPulse))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd0
	}
	if m.UnorderedPendingCount != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.UnorderedPendingCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xba
		}
	}
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	if m.AsOf != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.AsOf))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1004))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VStateReport_ProvidedContentBody) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 0)
}

func (m *VStateReport_ProvidedContentBody) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VStateReport_ProvidedContentBody) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VStateReport_ProvidedContentBody) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if len(m.UnorderedQueue) > 0 {
		for iNdEx := len(m.UnorderedQueue) - 1; iNdEx >= 0; iNdEx-- {
			{
				size := m.UnorderedQueue[iNdEx].ProtoSize()
				i -= size
				if _, err := m.UnorderedQueue[iNdEx].MarshalTo(dAtA[i:]); err != nil {
					return 0, err
				}
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xd2
		}
	}
	if len(m.OrderedQueue) > 0 {
		for iNdEx := len(m.OrderedQueue) - 1; iNdEx >= 0; iNdEx-- {
			{
				size := m.OrderedQueue[iNdEx].ProtoSize()
				i -= size
				if _, err := m.OrderedQueue[iNdEx].MarshalTo(dAtA[i:]); err != nil {
					return 0, err
				}
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xca
		}
	}
	if m.LatestDirtyCode != nil {
		{
			size, err := m.LatestDirtyCode.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xc2
			}
		}
	}
	if m.LatestValidatedCode != nil {
		{
			size, err := m.LatestValidatedCode.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xba
			}
		}
	}
	if m.LatestDirtyState != nil {
		{
			size, err := m.LatestDirtyState.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xb2
			}
		}
	}
	if m.LatestValidatedState != nil {
		{
			size, err := m.LatestValidatedState.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xaa
			}
		}
	}
	if i < len(dAtA) {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(0))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	return len(dAtA) - i, nil
}

func (m *ObjectState) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 0)
}

func (m *ObjectState) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectState) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if m.Deactivated {
		i--
		if m.Deactivated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if len(m.PreviousState) > 0 {
		i -= len(m.PreviousState)
		copy(dAtA[i:], m.PreviousState)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.PreviousState)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.State)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	{
		size := m.Class.ProtoSize()
		i -= size
		if _, err := m.Class.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb2
	{
		size := m.Parent.ProtoSize()
		i -= size
		if _, err := m.Parent.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	{
		size := m.Reference.ProtoSize()
		i -= size
		if _, err := m.Reference.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa2
	if i < len(dAtA) {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(0))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	return len(dAtA) - i, nil
}

func (m *VPendingDelegationRequest) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1005)
}

const TypeVPendingDelegationRequestPolymorthID uint64 = 1005

func (*VPendingDelegationRequest) GetDefaultPolymorphID() uint64 {
	return 1005
}

func (m *VPendingDelegationRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VPendingDelegationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VPendingDelegationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
	}
	{
		size := m.Request.ProtoSize()
		i -= size
		if _, err := m.Request.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	{
		size := m.Object.ProtoSize()
		i -= size
		if _, err := m.Object.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa2
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1005))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VDelegatedRequestFinished) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1006)
}

const TypeVDelegatedRequestFinishedPolymorthID uint64 = 1006

func (*VDelegatedRequestFinished) GetDefaultPolymorphID() uint64 {
	return 1006
}

func (m *VDelegatedRequestFinished) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VDelegatedRequestFinished) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VDelegatedRequestFinished) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if m.LatestState != nil {
		{
			size, err := m.LatestState.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xea
			}
		}
	}
	if len(m.EntryHeadHash) > 0 {
		i -= len(m.EntryHeadHash)
		copy(dAtA[i:], m.EntryHeadHash)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.EntryHeadHash)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xd2
		}
	}
	{
		size := m.CallIncoming.ProtoSize()
		i -= size
		if _, err := m.CallIncoming.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xca
	{
		size := m.CallOutgoing.ProtoSize()
		i -= size
		if _, err := m.CallOutgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc2
	if len(m.ResultFlags) > 0 {
		i -= len(m.ResultFlags)
		copy(dAtA[i:], m.ResultFlags)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ResultFlags)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb2
	if m.CallFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallFlags))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.CallType != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1006))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VDelegatedCallRequest) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1008)
}

const TypeVDelegatedCallRequestPolymorthID uint64 = 1008

func (*VDelegatedCallRequest) GetDefaultPolymorphID() uint64 {
	return 1008
}

func (m *VDelegatedCallRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VDelegatedCallRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VDelegatedCallRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xca
		}
	}
	{
		size := m.CallIncoming.ProtoSize()
		i -= size
		if _, err := m.CallIncoming.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc2
	{
		size := m.RecordHead.ProtoSize()
		i -= size
		if _, err := m.RecordHead.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xba
	{
		size := m.CallOutgoing.ProtoSize()
		i -= size
		if _, err := m.CallOutgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb2
	if m.CallFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.CallFlags))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa2
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1008))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VDelegatedCallResponse) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1009)
}

const TypeVDelegatedCallResponsePolymorthID uint64 = 1009

func (*VDelegatedCallResponse) GetDefaultPolymorphID() uint64 {
	return 1009
}

func (m *VDelegatedCallResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VDelegatedCallResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VDelegatedCallResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	{
		size, err := m.DelegationSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		if size > 0 {
			i -= size
			i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
	}
	{
		size := m.CallIncoming.ProtoSize()
		i -= size
		if _, err := m.CallIncoming.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa2
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1009))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *CallDelegationToken) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1010)
}

const TypeCallDelegationTokenPolymorthID uint64 = 1010

func (*CallDelegationToken) GetDefaultPolymorphID() uint64 {
	return 1010
}

func (m *CallDelegationToken) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CallDelegationToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CallDelegationToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if len(m.ApproverSignature) > 0 {
		i -= len(m.ApproverSignature)
		copy(dAtA[i:], m.ApproverSignature)
		i--
		dAtA[i] = 132
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(len(m.ApproverSignature)+1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	{
		size := m.Outgoing.ProtoSize()
		i -= size
		if _, err := m.Outgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd2
	{
		size := m.Caller.ProtoSize()
		i -= size
		if _, err := m.Caller.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xca
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc2
	if m.PulseNumber != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.PulseNumber))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	{
		size := m.DelegateTo.ProtoSize()
		i -= size
		if _, err := m.DelegateTo.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb2
	{
		size := m.Approver.ProtoSize()
		i -= size
		if _, err := m.Approver.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	if m.TokenTypeAndFlags != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.TokenTypeAndFlags))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1010))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VFindCallRequest) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1011)
}

const TypeVFindCallRequestPolymorthID uint64 = 1011

func (*VFindCallRequest) GetDefaultPolymorphID() uint64 {
	return 1011
}

func (m *VFindCallRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VFindCallRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VFindCallRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	{
		size := m.Outgoing.ProtoSize()
		i -= size
		if _, err := m.Outgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb2
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	if m.LookAt != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.LookAt))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1011))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func (m *VFindCallResponse) SetupContext(ctx MessageContext) error {
	return ctx.Message(m, 1012)
}

const TypeVFindCallResponsePolymorthID uint64 = 1012

func (*VFindCallResponse) GetDefaultPolymorphID() uint64 {
	return 1012
}

func (m *VFindCallResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VFindCallResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VFindCallResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l, fieldEnd int
	_, _ = l, fieldEnd
	if m.CallResult != nil {
		{
			size, err := m.CallResult.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			if size > 0 {
				i -= size
				i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xba
			}
		}
	}
	if m.Status != 0 {
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	{
		size := m.Outgoing.ProtoSize()
		i -= size
		if _, err := m.Outgoing.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xaa
	{
		size := m.Callee.ProtoSize()
		i -= size
		if _, err := m.Callee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintProtoVnvnR0(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa2
	i = encodeVarintProtoVnvnR0(dAtA, i, uint64(1012))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}

func encodeVarintProtoVnvnR0(dAtA []byte, offset int, v uint64) int {
	offset -= sovProtoVnvnR0(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

func init() {
	RegisterMessageType(1001, "", (*VCallRequest)(nil))
	RegisterMessageType(1002, "", (*VCallResult)(nil))
	RegisterMessageType(1003, "", (*VStateRequest)(nil))
	RegisterMessageType(1004, "", (*VStateReport)(nil))
	RegisterMessageType(1005, "", (*VPendingDelegationRequest)(nil))
	RegisterMessageType(1006, "", (*VDelegatedRequestFinished)(nil))
	RegisterMessageType(1008, "", (*VDelegatedCallRequest)(nil))
	RegisterMessageType(1009, "", (*VDelegatedCallResponse)(nil))
	RegisterMessageType(1010, "", (*CallDelegationToken)(nil))
	RegisterMessageType(1011, "", (*VFindCallRequest)(nil))
	RegisterMessageType(1012, "", (*VFindCallResponse)(nil))
}

func (m *VCallRequest) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CallType != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallType))
	}
	if m.CallFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallFlags))
	}
	if m.CallAsOf != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallAsOf))
	}
	l = m.Caller.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.CallSiteDeclaration.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.CallSiteMethod)
	if l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if m.CallSequence != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallSequence))
	}
	l = m.CallReason.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.RootTX.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.CallTX.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.ExpenseCenter.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.ResourceCenter.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.PayloadHash)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.ProducerSignature)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.RegistrarSignature)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if l = m.RegistrarDelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if m.CallRequestFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallRequestFlags))
	}
	l = m.KnownCalleeIncoming.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.EntryHeadHash)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = m.CallOutgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if m.TXExpiry != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.TXExpiry))
	}
	l = len(m.SecurityContext)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.TXContext)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.ExtensionHashes)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.Extensions)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	n += 2 + sovProtoVnvnR0(1001)
	return n
}

func (m *VCallResult) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CallType != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallType))
	}
	if m.CallFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallFlags))
	}
	if m.CallAsOf != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallAsOf))
	}
	l = m.Caller.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.ResultFlags)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = m.CallOutgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.CallIncoming.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.PayloadHash)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = m.CallIncomingResult.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.ProducerSignature)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.RegistrarSignature)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if l = m.RegistrarDelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.EntryHeadHash)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.SecurityContext)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.ReturnArguments)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.ExtensionHashes)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.Extensions)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	n += 2 + sovProtoVnvnR0(1002)
	return n
}

func (m *VStateRequest) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AsOf != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.AsOf))
	}
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if m.RequestedContent != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.RequestedContent))
	}
	l = len(m.RequestedContentLimit)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.SupportedExtensions)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.ProducerSignature)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if m.CallRequestFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallRequestFlags))
	}
	n += 2 + sovProtoVnvnR0(1003)
	return n
}

func (m *VStateReport) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AsOf != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.AsOf))
	}
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if m.UnorderedPendingCount != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.UnorderedPendingCount))
	}
	if m.UnorderedPendingEarliestPulse != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.UnorderedPendingEarliestPulse))
	}
	if m.OrderedPendingCount != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.OrderedPendingCount))
	}
	if m.OrderedPendingEarliestPulse != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.OrderedPendingEarliestPulse))
	}
	if m.PreRegisteredQueueCount != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.PreRegisteredQueueCount))
	}
	if m.PreRegisteredEarliestPulse != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.PreRegisteredEarliestPulse))
	}
	if m.PriorityCallQueueCount != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.PriorityCallQueueCount))
	}
	l = m.LatestValidatedState.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.LatestValidatedCode.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.LatestDirtyState.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.LatestDirtyCode.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if m.ProvidedContent != nil {
		if l = m.ProvidedContent.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if m.Status != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.Status))
	}
	n += 2 + sovProtoVnvnR0(1004)
	return n
}

func (m *VStateReport_ProvidedContentBody) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LatestValidatedState != nil {
		if l = m.LatestValidatedState.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if m.LatestDirtyState != nil {
		if l = m.LatestDirtyState.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if m.LatestValidatedCode != nil {
		if l = m.LatestValidatedCode.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if m.LatestDirtyCode != nil {
		if l = m.LatestDirtyCode.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if len(m.OrderedQueue) > 0 {
		for _, e := range m.OrderedQueue {
			l = e.ProtoSize()
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if len(m.UnorderedQueue) > 0 {
		for _, e := range m.UnorderedQueue {
			l = e.ProtoSize()
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	if n > 0 {
		n += 2 + sovProtoVnvnR0(0)
	}
	return n
}

func (m *ObjectState) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Reference.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Parent.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Class.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.State)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.PreviousState)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if m.Deactivated {
		n += 3
	}
	if n > 0 {
		n += 2 + sovProtoVnvnR0(0)
	}
	return n
}

func (m *VPendingDelegationRequest) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Object.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Request.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	n += 2 + sovProtoVnvnR0(1005)
	return n
}

func (m *VDelegatedRequestFinished) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CallType != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallType))
	}
	if m.CallFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallFlags))
	}
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.ResultFlags)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = m.CallOutgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.CallIncoming.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	l = len(m.EntryHeadHash)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	if m.LatestState != nil {
		if l = m.LatestState.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	n += 2 + sovProtoVnvnR0(1006)
	return n
}

func (m *VDelegatedCallRequest) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if m.CallFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.CallFlags))
	}
	l = m.CallOutgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.RecordHead.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.CallIncoming.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	n += 2 + sovProtoVnvnR0(1008)
	return n
}

func (m *VDelegatedCallResponse) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.CallIncoming.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if l = m.DelegationSpec.ProtoSize(); l > 0 {
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	n += 2 + sovProtoVnvnR0(1009)
	return n
}

func (m *CallDelegationToken) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TokenTypeAndFlags != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.TokenTypeAndFlags))
	}
	l = m.Approver.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.DelegateTo.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if m.PulseNumber != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.PulseNumber))
	}
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Caller.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Outgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = len(m.ApproverSignature)
	if l > 0 {
		l++
		n += 2 + l + sovProtoVnvnR0(uint64(l))
	}
	n += 2 + sovProtoVnvnR0(1010)
	return n
}

func (m *VFindCallRequest) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LookAt != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.LookAt))
	}
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Outgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	n += 2 + sovProtoVnvnR0(1011)
	return n
}

func (m *VFindCallResponse) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Callee.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	l = m.Outgoing.ProtoSize()
	n += 2 + l + sovProtoVnvnR0(uint64(l))
	if m.Status != 0 {
		n += 2 + sovProtoVnvnR0(uint64(m.Status))
	}
	if m.CallResult != nil {
		if l = m.CallResult.ProtoSize(); l > 0 {
			n += 2 + l + sovProtoVnvnR0(uint64(l))
		}
	}
	n += 2 + sovProtoVnvnR0(1012)
	return n
}

func sovProtoVnvnR0(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProtoVnvnR0(x uint64) (n int) {
	return sovProtoVnvnR0(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *VCallRequest) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VCallRequest) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VCallRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VCallRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallType", wireType)
			}
			m.CallType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallType |= CallTypeNew(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallFlags", wireType)
			}
			m.CallFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallFlags |= CallFlags(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallAsOf", wireType)
			}
			m.CallAsOf = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallAsOf |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caller", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Caller.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallSiteDeclaration", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallSiteDeclaration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallSiteMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallSiteMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallSequence", wireType)
			}
			m.CallSequence = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallSequence |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallReason", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallReason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootTX", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RootTX.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallTX", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallTX.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpenseCenter", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ExpenseCenter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceCenter", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ResourceCenter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayloadHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.PayloadHash = append(m.PayloadHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PayloadHash == nil {
				m.PayloadHash = []byte{}
			}
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 36:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProducerSignature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ProducerSignature = append(m.ProducerSignature[:0], dAtA[iNdEx:postIndex]...)
			if m.ProducerSignature == nil {
				m.ProducerSignature = []byte{}
			}
			iNdEx = postIndex
		case 37:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistrarSignature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.RegistrarSignature = append(m.RegistrarSignature[:0], dAtA[iNdEx:postIndex]...)
			if m.RegistrarSignature == nil {
				m.RegistrarSignature = []byte{}
			}
			iNdEx = postIndex
		case 38:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistrarDelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RegistrarDelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallRequestFlags", wireType)
			}
			m.CallRequestFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallRequestFlags |= CallRequestFlags(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KnownCalleeIncoming", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.KnownCalleeIncoming.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 42:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryHeadHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.EntryHeadHash = append(m.EntryHeadHash[:0], dAtA[iNdEx:postIndex]...)
			if m.EntryHeadHash == nil {
				m.EntryHeadHash = []byte{}
			}
			iNdEx = postIndex
		case 43:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallOutgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallOutgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 44:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TXExpiry", wireType)
			}
			m.TXExpiry = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TXExpiry |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 45:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityContext", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.SecurityContext = append(m.SecurityContext[:0], dAtA[iNdEx:postIndex]...)
			if m.SecurityContext == nil {
				m.SecurityContext = []byte{}
			}
			iNdEx = postIndex
		case 46:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TXContext", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.TXContext = append(m.TXContext[:0], dAtA[iNdEx:postIndex]...)
			if m.TXContext == nil {
				m.TXContext = []byte{}
			}
			iNdEx = postIndex
		case 47:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.Arguments = append(m.Arguments[:0], dAtA[iNdEx:postIndex]...)
			if m.Arguments == nil {
				m.Arguments = []byte{}
			}
			iNdEx = postIndex
		case 48:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtensionHashes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ExtensionHashes = append(m.ExtensionHashes[:0], dAtA[iNdEx:postIndex]...)
			if m.ExtensionHashes == nil {
				m.ExtensionHashes = []byte{}
			}
			iNdEx = postIndex
		case 49:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extensions", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.Extensions = append(m.Extensions[:0], dAtA[iNdEx:postIndex]...)
			if m.Extensions == nil {
				m.Extensions = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VCallResult) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VCallResult) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VCallResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VCallResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallType", wireType)
			}
			m.CallType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallType |= CallTypeNew(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallFlags", wireType)
			}
			m.CallFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallFlags |= CallFlags(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallAsOf", wireType)
			}
			m.CallAsOf = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallAsOf |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caller", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Caller.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultFlags", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ResultFlags = append(m.ResultFlags[:0], dAtA[iNdEx:postIndex]...)
			if m.ResultFlags == nil {
				m.ResultFlags = []byte{}
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallOutgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallOutgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallIncoming", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallIncoming.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayloadHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.PayloadHash = append(m.PayloadHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PayloadHash == nil {
				m.PayloadHash = []byte{}
			}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallIncomingResult", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallIncomingResult.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProducerSignature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ProducerSignature = append(m.ProducerSignature[:0], dAtA[iNdEx:postIndex]...)
			if m.ProducerSignature == nil {
				m.ProducerSignature = []byte{}
			}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistrarSignature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.RegistrarSignature = append(m.RegistrarSignature[:0], dAtA[iNdEx:postIndex]...)
			if m.RegistrarSignature == nil {
				m.RegistrarSignature = []byte{}
			}
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistrarDelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RegistrarDelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 36:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryHeadHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.EntryHeadHash = append(m.EntryHeadHash[:0], dAtA[iNdEx:postIndex]...)
			if m.EntryHeadHash == nil {
				m.EntryHeadHash = []byte{}
			}
			iNdEx = postIndex
		case 37:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityContext", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.SecurityContext = append(m.SecurityContext[:0], dAtA[iNdEx:postIndex]...)
			if m.SecurityContext == nil {
				m.SecurityContext = []byte{}
			}
			iNdEx = postIndex
		case 38:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReturnArguments", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ReturnArguments = append(m.ReturnArguments[:0], dAtA[iNdEx:postIndex]...)
			if m.ReturnArguments == nil {
				m.ReturnArguments = []byte{}
			}
			iNdEx = postIndex
		case 39:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtensionHashes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ExtensionHashes = append(m.ExtensionHashes[:0], dAtA[iNdEx:postIndex]...)
			if m.ExtensionHashes == nil {
				m.ExtensionHashes = []byte{}
			}
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extensions", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.Extensions = append(m.Extensions[:0], dAtA[iNdEx:postIndex]...)
			if m.Extensions == nil {
				m.Extensions = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VStateRequest) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VStateRequest) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VStateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AsOf", wireType)
			}
			m.AsOf = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AsOf |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedContent", wireType)
			}
			m.RequestedContent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestedContent |= StateRequestContentFlags(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedContentLimit", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.RequestedContentLimit = append(m.RequestedContentLimit[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestedContentLimit == nil {
				m.RequestedContentLimit = []byte{}
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportedExtensions", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.SupportedExtensions = append(m.SupportedExtensions[:0], dAtA[iNdEx:postIndex]...)
			if m.SupportedExtensions == nil {
				m.SupportedExtensions = []byte{}
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProducerSignature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ProducerSignature = append(m.ProducerSignature[:0], dAtA[iNdEx:postIndex]...)
			if m.ProducerSignature == nil {
				m.ProducerSignature = []byte{}
			}
			iNdEx = postIndex
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallRequestFlags", wireType)
			}
			m.CallRequestFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallRequestFlags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VStateReport) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VStateReport) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VStateReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VStateReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AsOf", wireType)
			}
			m.AsOf = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AsOf |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnorderedPendingCount", wireType)
			}
			m.UnorderedPendingCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnorderedPendingCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnorderedPendingEarliestPulse", wireType)
			}
			m.UnorderedPendingEarliestPulse = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnorderedPendingEarliestPulse |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderedPendingCount", wireType)
			}
			m.OrderedPendingCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderedPendingCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderedPendingEarliestPulse", wireType)
			}
			m.OrderedPendingEarliestPulse = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderedPendingEarliestPulse |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreRegisteredQueueCount", wireType)
			}
			m.PreRegisteredQueueCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PreRegisteredQueueCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreRegisteredEarliestPulse", wireType)
			}
			m.PreRegisteredEarliestPulse = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PreRegisteredEarliestPulse |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PriorityCallQueueCount", wireType)
			}
			m.PriorityCallQueueCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PriorityCallQueueCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestValidatedState", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LatestValidatedState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestValidatedCode", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LatestValidatedCode.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestDirtyState", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LatestDirtyState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 35:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestDirtyCode", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LatestDirtyCode.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 36:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProvidedContent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProvidedContent == nil {
				m.ProvidedContent = &VStateReport_ProvidedContentBody{}
			}
			if err := m.ProvidedContent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 37:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= VStateReport_StateStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VStateReport_ProvidedContentBody) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VStateReport_ProvidedContentBody) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProvidedContentBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProvidedContentBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestValidatedState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LatestValidatedState == nil {
				m.LatestValidatedState = &ObjectState{}
			}
			if err := m.LatestValidatedState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestDirtyState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LatestDirtyState == nil {
				m.LatestDirtyState = &ObjectState{}
			}
			if err := m.LatestDirtyState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestValidatedCode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LatestValidatedCode == nil {
				m.LatestValidatedCode = &ObjectState{}
			}
			if err := m.LatestValidatedCode.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestDirtyCode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LatestDirtyCode == nil {
				m.LatestDirtyCode = &ObjectState{}
			}
			if err := m.LatestDirtyCode.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderedQueue", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_insolar_assured_ledger_ledger_core_reference.Global
			m.OrderedQueue = append(m.OrderedQueue, v)
			if err := m.OrderedQueue[len(m.OrderedQueue)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnorderedQueue", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_insolar_assured_ledger_ledger_core_reference.Global
			m.UnorderedQueue = append(m.UnorderedQueue, v)
			if err := m.UnorderedQueue[len(m.UnorderedQueue)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectState) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *ObjectState) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reference", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Reference.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parent", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Parent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Class", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Class.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.State = append(m.State[:0], dAtA[iNdEx:postIndex]...)
			if m.State == nil {
				m.State = []byte{}
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreviousState", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.PreviousState = append(m.PreviousState[:0], dAtA[iNdEx:postIndex]...)
			if m.PreviousState == nil {
				m.PreviousState = []byte{}
			}
			iNdEx = postIndex
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deactivated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Deactivated = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VPendingDelegationRequest) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VPendingDelegationRequest) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VPendingDelegationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VPendingDelegationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Object", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Object.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Request", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Request.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VDelegatedRequestFinished) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VDelegatedRequestFinished) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VDelegatedRequestFinished: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VDelegatedRequestFinished: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallType", wireType)
			}
			m.CallType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallType |= CallTypeNew(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallFlags", wireType)
			}
			m.CallFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallFlags |= CallFlags(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultFlags", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ResultFlags = append(m.ResultFlags[:0], dAtA[iNdEx:postIndex]...)
			if m.ResultFlags == nil {
				m.ResultFlags = []byte{}
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallOutgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallOutgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallIncoming", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallIncoming.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryHeadHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.EntryHeadHash = append(m.EntryHeadHash[:0], dAtA[iNdEx:postIndex]...)
			if m.EntryHeadHash == nil {
				m.EntryHeadHash = []byte{}
			}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LatestState == nil {
				m.LatestState = &ObjectState{}
			}
			if err := m.LatestState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VDelegatedCallRequest) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VDelegatedCallRequest) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VDelegatedCallRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VDelegatedCallRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallFlags", wireType)
			}
			m.CallFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallFlags |= CallFlags(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallOutgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallOutgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordHead", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RecordHead.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallIncoming", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallIncoming.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VDelegatedCallResponse) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VDelegatedCallResponse) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VDelegatedCallResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VDelegatedCallResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallIncoming", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CallIncoming.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegationSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CallDelegationToken) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *CallDelegationToken) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CallDelegationToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CallDelegationToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenTypeAndFlags", wireType)
			}
			m.TokenTypeAndFlags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenTypeAndFlags |= CallDelegationTokenType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approver", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Approver.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegateTo", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DelegateTo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PulseNumber", wireType)
			}
			m.PulseNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PulseNumber |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caller", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Caller.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Outgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApproverSignature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if byteLen > 0 {
				if dAtA[iNdEx] != 132 {
					return ErrExpectedBinaryMarkerProtoVnvnR0
				}
				iNdEx++
			}
			m.ApproverSignature = append(m.ApproverSignature[:0], dAtA[iNdEx:postIndex]...)
			if m.ApproverSignature == nil {
				m.ApproverSignature = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VFindCallRequest) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VFindCallRequest) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VFindCallRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VFindCallRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LookAt", wireType)
			}
			m.LookAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LookAt |= github_com_insolar_assured_ledger_ledger_core_pulse.Number(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Outgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VFindCallResponse) Unmarshal(dAtA []byte) error {
	return m.UnmarshalWithUnknownCallback(dAtA, skipProtoVnvnR0)
}
func (m *VFindCallResponse) UnmarshalWithUnknownCallback(dAtA []byte, skipFn func([]byte) (int, error)) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VFindCallResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VFindCallResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callee", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Callee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outgoing", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Outgoing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= VFindCallResponse_CallState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallResult", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CallResult == nil {
				m.CallResult = &VCallResult{}
			}
			if err := m.CallResult.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				l = iNdEx
				break
			}
			if skippy == 0 {
				if skippy, err = skipProtoVnvnR0(dAtA[iNdEx:]); err != nil {
					return err
				}
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProtoVnvnR0
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtoVnvnR0(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtoVnvnR0
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtoVnvnR0
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProtoVnvnR0
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProtoVnvnR0
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProtoVnvnR0
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProtoVnvnR0        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtoVnvnR0          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProtoVnvnR0 = fmt.Errorf("proto: unexpected end of group")
	ErrExpectedBinaryMarkerProtoVnvnR0 = fmt.Errorf("proto: binary marker was expected")
)
